// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlantFlowerActivityDetailInfo.proto

package emu.grasscutter.net.proto;

public final class PlantFlowerActivityDetailInfoOuterClass {
  private PlantFlowerActivityDetailInfoOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PlantFlowerActivityDetailInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlantFlowerActivityDetailInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool is_content_closed = 3;</code>
     * @return The isContentClosed.
     */
    boolean getIsContentClosed();

    /**
     * <code>map&lt;uint32, uint32&gt; wish_flower_num_map = 10;</code>
     */
    int getWishFlowerNumMapCount();
    /**
     * <code>map&lt;uint32, uint32&gt; wish_flower_num_map = 10;</code>
     */
    boolean containsWishFlowerNumMap(
        int key);
    /**
     * Use {@link #getWishFlowerNumMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getWishFlowerNumMap();
    /**
     * <code>map&lt;uint32, uint32&gt; wish_flower_num_map = 10;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getWishFlowerNumMapMap();
    /**
     * <code>map&lt;uint32, uint32&gt; wish_flower_num_map = 10;</code>
     */

    int getWishFlowerNumMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; wish_flower_num_map = 10;</code>
     */

    int getWishFlowerNumMapOrThrow(
        int key);

    /**
     * <code>uint32 today_seed_reward_id = 11;</code>
     * @return The todaySeedRewardId.
     */
    int getTodaySeedRewardId();

    /**
     * <code>uint32 day_index = 1;</code>
     * @return The dayIndex.
     */
    int getDayIndex();

    /**
     * <code>bool is_today_has_awarded = 13;</code>
     * @return The isTodayHasAwarded.
     */
    boolean getIsTodayHasAwarded();

    /**
     * <code>map&lt;uint32, uint32&gt; used_flower_num_map = 7;</code>
     */
    int getUsedFlowerNumMapCount();
    /**
     * <code>map&lt;uint32, uint32&gt; used_flower_num_map = 7;</code>
     */
    boolean containsUsedFlowerNumMap(
        int key);
    /**
     * Use {@link #getUsedFlowerNumMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getUsedFlowerNumMap();
    /**
     * <code>map&lt;uint32, uint32&gt; used_flower_num_map = 7;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getUsedFlowerNumMapMap();
    /**
     * <code>map&lt;uint32, uint32&gt; used_flower_num_map = 7;</code>
     */

    int getUsedFlowerNumMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; used_flower_num_map = 7;</code>
     */

    int getUsedFlowerNumMapOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code PlantFlowerActivityDetailInfo}
   */
  public static final class PlantFlowerActivityDetailInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PlantFlowerActivityDetailInfo)
      PlantFlowerActivityDetailInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PlantFlowerActivityDetailInfo.newBuilder() to construct.
    private PlantFlowerActivityDetailInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlantFlowerActivityDetailInfo() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PlantFlowerActivityDetailInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PlantFlowerActivityDetailInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              dayIndex_ = input.readUInt32();
              break;
            }
            case 24: {

              isContentClosed_ = input.readBool();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                usedFlowerNumMap_ = com.google.protobuf.MapField.newMapField(
                    UsedFlowerNumMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              usedFlowerNumMap__ = input.readMessage(
                  UsedFlowerNumMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              usedFlowerNumMap_.getMutableMap().put(
                  usedFlowerNumMap__.getKey(), usedFlowerNumMap__.getValue());
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                wishFlowerNumMap_ = com.google.protobuf.MapField.newMapField(
                    WishFlowerNumMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              wishFlowerNumMap__ = input.readMessage(
                  WishFlowerNumMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              wishFlowerNumMap_.getMutableMap().put(
                  wishFlowerNumMap__.getKey(), wishFlowerNumMap__.getValue());
              break;
            }
            case 88: {

              todaySeedRewardId_ = input.readUInt32();
              break;
            }
            case 104: {

              isTodayHasAwarded_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.internal_static_PlantFlowerActivityDetailInfo_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 10:
          return internalGetWishFlowerNumMap();
        case 7:
          return internalGetUsedFlowerNumMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.internal_static_PlantFlowerActivityDetailInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo.class, emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo.Builder.class);
    }

    public static final int IS_CONTENT_CLOSED_FIELD_NUMBER = 3;
    private boolean isContentClosed_;
    /**
     * <code>bool is_content_closed = 3;</code>
     * @return The isContentClosed.
     */
    @java.lang.Override
    public boolean getIsContentClosed() {
      return isContentClosed_;
    }

    public static final int WISH_FLOWER_NUM_MAP_FIELD_NUMBER = 10;
    private static final class WishFlowerNumMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.internal_static_PlantFlowerActivityDetailInfo_WishFlowerNumMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> wishFlowerNumMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetWishFlowerNumMap() {
      if (wishFlowerNumMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            WishFlowerNumMapDefaultEntryHolder.defaultEntry);
      }
      return wishFlowerNumMap_;
    }

    public int getWishFlowerNumMapCount() {
      return internalGetWishFlowerNumMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; wish_flower_num_map = 10;</code>
     */

    @java.lang.Override
    public boolean containsWishFlowerNumMap(
        int key) {
      
      return internalGetWishFlowerNumMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getWishFlowerNumMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getWishFlowerNumMap() {
      return getWishFlowerNumMapMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; wish_flower_num_map = 10;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getWishFlowerNumMapMap() {
      return internalGetWishFlowerNumMap().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; wish_flower_num_map = 10;</code>
     */
    @java.lang.Override

    public int getWishFlowerNumMapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetWishFlowerNumMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; wish_flower_num_map = 10;</code>
     */
    @java.lang.Override

    public int getWishFlowerNumMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetWishFlowerNumMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int TODAY_SEED_REWARD_ID_FIELD_NUMBER = 11;
    private int todaySeedRewardId_;
    /**
     * <code>uint32 today_seed_reward_id = 11;</code>
     * @return The todaySeedRewardId.
     */
    @java.lang.Override
    public int getTodaySeedRewardId() {
      return todaySeedRewardId_;
    }

    public static final int DAY_INDEX_FIELD_NUMBER = 1;
    private int dayIndex_;
    /**
     * <code>uint32 day_index = 1;</code>
     * @return The dayIndex.
     */
    @java.lang.Override
    public int getDayIndex() {
      return dayIndex_;
    }

    public static final int IS_TODAY_HAS_AWARDED_FIELD_NUMBER = 13;
    private boolean isTodayHasAwarded_;
    /**
     * <code>bool is_today_has_awarded = 13;</code>
     * @return The isTodayHasAwarded.
     */
    @java.lang.Override
    public boolean getIsTodayHasAwarded() {
      return isTodayHasAwarded_;
    }

    public static final int USED_FLOWER_NUM_MAP_FIELD_NUMBER = 7;
    private static final class UsedFlowerNumMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.internal_static_PlantFlowerActivityDetailInfo_UsedFlowerNumMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> usedFlowerNumMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetUsedFlowerNumMap() {
      if (usedFlowerNumMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            UsedFlowerNumMapDefaultEntryHolder.defaultEntry);
      }
      return usedFlowerNumMap_;
    }

    public int getUsedFlowerNumMapCount() {
      return internalGetUsedFlowerNumMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; used_flower_num_map = 7;</code>
     */

    @java.lang.Override
    public boolean containsUsedFlowerNumMap(
        int key) {
      
      return internalGetUsedFlowerNumMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getUsedFlowerNumMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getUsedFlowerNumMap() {
      return getUsedFlowerNumMapMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; used_flower_num_map = 7;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getUsedFlowerNumMapMap() {
      return internalGetUsedFlowerNumMap().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; used_flower_num_map = 7;</code>
     */
    @java.lang.Override

    public int getUsedFlowerNumMapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetUsedFlowerNumMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; used_flower_num_map = 7;</code>
     */
    @java.lang.Override

    public int getUsedFlowerNumMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetUsedFlowerNumMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (dayIndex_ != 0) {
        output.writeUInt32(1, dayIndex_);
      }
      if (isContentClosed_ != false) {
        output.writeBool(3, isContentClosed_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetUsedFlowerNumMap(),
          UsedFlowerNumMapDefaultEntryHolder.defaultEntry,
          7);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetWishFlowerNumMap(),
          WishFlowerNumMapDefaultEntryHolder.defaultEntry,
          10);
      if (todaySeedRewardId_ != 0) {
        output.writeUInt32(11, todaySeedRewardId_);
      }
      if (isTodayHasAwarded_ != false) {
        output.writeBool(13, isTodayHasAwarded_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (dayIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, dayIndex_);
      }
      if (isContentClosed_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isContentClosed_);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetUsedFlowerNumMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        usedFlowerNumMap__ = UsedFlowerNumMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, usedFlowerNumMap__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetWishFlowerNumMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        wishFlowerNumMap__ = WishFlowerNumMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, wishFlowerNumMap__);
      }
      if (todaySeedRewardId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, todaySeedRewardId_);
      }
      if (isTodayHasAwarded_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, isTodayHasAwarded_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo)) {
        return super.equals(obj);
      }
      emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo other = (emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo) obj;

      if (getIsContentClosed()
          != other.getIsContentClosed()) return false;
      if (!internalGetWishFlowerNumMap().equals(
          other.internalGetWishFlowerNumMap())) return false;
      if (getTodaySeedRewardId()
          != other.getTodaySeedRewardId()) return false;
      if (getDayIndex()
          != other.getDayIndex()) return false;
      if (getIsTodayHasAwarded()
          != other.getIsTodayHasAwarded()) return false;
      if (!internalGetUsedFlowerNumMap().equals(
          other.internalGetUsedFlowerNumMap())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + IS_CONTENT_CLOSED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsContentClosed());
      if (!internalGetWishFlowerNumMap().getMap().isEmpty()) {
        hash = (37 * hash) + WISH_FLOWER_NUM_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetWishFlowerNumMap().hashCode();
      }
      hash = (37 * hash) + TODAY_SEED_REWARD_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTodaySeedRewardId();
      hash = (37 * hash) + DAY_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getDayIndex();
      hash = (37 * hash) + IS_TODAY_HAS_AWARDED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsTodayHasAwarded());
      if (!internalGetUsedFlowerNumMap().getMap().isEmpty()) {
        hash = (37 * hash) + USED_FLOWER_NUM_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetUsedFlowerNumMap().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlantFlowerActivityDetailInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PlantFlowerActivityDetailInfo)
        emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.internal_static_PlantFlowerActivityDetailInfo_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 10:
            return internalGetWishFlowerNumMap();
          case 7:
            return internalGetUsedFlowerNumMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 10:
            return internalGetMutableWishFlowerNumMap();
          case 7:
            return internalGetMutableUsedFlowerNumMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.internal_static_PlantFlowerActivityDetailInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo.class, emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo.Builder.class);
      }

      // Construct using emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        isContentClosed_ = false;

        internalGetMutableWishFlowerNumMap().clear();
        todaySeedRewardId_ = 0;

        dayIndex_ = 0;

        isTodayHasAwarded_ = false;

        internalGetMutableUsedFlowerNumMap().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.internal_static_PlantFlowerActivityDetailInfo_descriptor;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo getDefaultInstanceForType() {
        return emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo.getDefaultInstance();
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo build() {
        emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo buildPartial() {
        emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo result = new emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo(this);
        int from_bitField0_ = bitField0_;
        result.isContentClosed_ = isContentClosed_;
        result.wishFlowerNumMap_ = internalGetWishFlowerNumMap();
        result.wishFlowerNumMap_.makeImmutable();
        result.todaySeedRewardId_ = todaySeedRewardId_;
        result.dayIndex_ = dayIndex_;
        result.isTodayHasAwarded_ = isTodayHasAwarded_;
        result.usedFlowerNumMap_ = internalGetUsedFlowerNumMap();
        result.usedFlowerNumMap_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo) {
          return mergeFrom((emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo other) {
        if (other == emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo.getDefaultInstance()) return this;
        if (other.getIsContentClosed() != false) {
          setIsContentClosed(other.getIsContentClosed());
        }
        internalGetMutableWishFlowerNumMap().mergeFrom(
            other.internalGetWishFlowerNumMap());
        if (other.getTodaySeedRewardId() != 0) {
          setTodaySeedRewardId(other.getTodaySeedRewardId());
        }
        if (other.getDayIndex() != 0) {
          setDayIndex(other.getDayIndex());
        }
        if (other.getIsTodayHasAwarded() != false) {
          setIsTodayHasAwarded(other.getIsTodayHasAwarded());
        }
        internalGetMutableUsedFlowerNumMap().mergeFrom(
            other.internalGetUsedFlowerNumMap());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean isContentClosed_ ;
      /**
       * <code>bool is_content_closed = 3;</code>
       * @return The isContentClosed.
       */
      @java.lang.Override
      public boolean getIsContentClosed() {
        return isContentClosed_;
      }
      /**
       * <code>bool is_content_closed = 3;</code>
       * @param value The isContentClosed to set.
       * @return This builder for chaining.
       */
      public Builder setIsContentClosed(boolean value) {
        
        isContentClosed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_content_closed = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsContentClosed() {
        
        isContentClosed_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> wishFlowerNumMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetWishFlowerNumMap() {
        if (wishFlowerNumMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              WishFlowerNumMapDefaultEntryHolder.defaultEntry);
        }
        return wishFlowerNumMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableWishFlowerNumMap() {
        onChanged();;
        if (wishFlowerNumMap_ == null) {
          wishFlowerNumMap_ = com.google.protobuf.MapField.newMapField(
              WishFlowerNumMapDefaultEntryHolder.defaultEntry);
        }
        if (!wishFlowerNumMap_.isMutable()) {
          wishFlowerNumMap_ = wishFlowerNumMap_.copy();
        }
        return wishFlowerNumMap_;
      }

      public int getWishFlowerNumMapCount() {
        return internalGetWishFlowerNumMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; wish_flower_num_map = 10;</code>
       */

      @java.lang.Override
      public boolean containsWishFlowerNumMap(
          int key) {
        
        return internalGetWishFlowerNumMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getWishFlowerNumMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getWishFlowerNumMap() {
        return getWishFlowerNumMapMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; wish_flower_num_map = 10;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getWishFlowerNumMapMap() {
        return internalGetWishFlowerNumMap().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; wish_flower_num_map = 10;</code>
       */
      @java.lang.Override

      public int getWishFlowerNumMapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetWishFlowerNumMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; wish_flower_num_map = 10;</code>
       */
      @java.lang.Override

      public int getWishFlowerNumMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetWishFlowerNumMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearWishFlowerNumMap() {
        internalGetMutableWishFlowerNumMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; wish_flower_num_map = 10;</code>
       */

      public Builder removeWishFlowerNumMap(
          int key) {
        
        internalGetMutableWishFlowerNumMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableWishFlowerNumMap() {
        return internalGetMutableWishFlowerNumMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; wish_flower_num_map = 10;</code>
       */
      public Builder putWishFlowerNumMap(
          int key,
          int value) {
        
        
        internalGetMutableWishFlowerNumMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; wish_flower_num_map = 10;</code>
       */

      public Builder putAllWishFlowerNumMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableWishFlowerNumMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private int todaySeedRewardId_ ;
      /**
       * <code>uint32 today_seed_reward_id = 11;</code>
       * @return The todaySeedRewardId.
       */
      @java.lang.Override
      public int getTodaySeedRewardId() {
        return todaySeedRewardId_;
      }
      /**
       * <code>uint32 today_seed_reward_id = 11;</code>
       * @param value The todaySeedRewardId to set.
       * @return This builder for chaining.
       */
      public Builder setTodaySeedRewardId(int value) {
        
        todaySeedRewardId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 today_seed_reward_id = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearTodaySeedRewardId() {
        
        todaySeedRewardId_ = 0;
        onChanged();
        return this;
      }

      private int dayIndex_ ;
      /**
       * <code>uint32 day_index = 1;</code>
       * @return The dayIndex.
       */
      @java.lang.Override
      public int getDayIndex() {
        return dayIndex_;
      }
      /**
       * <code>uint32 day_index = 1;</code>
       * @param value The dayIndex to set.
       * @return This builder for chaining.
       */
      public Builder setDayIndex(int value) {
        
        dayIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 day_index = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDayIndex() {
        
        dayIndex_ = 0;
        onChanged();
        return this;
      }

      private boolean isTodayHasAwarded_ ;
      /**
       * <code>bool is_today_has_awarded = 13;</code>
       * @return The isTodayHasAwarded.
       */
      @java.lang.Override
      public boolean getIsTodayHasAwarded() {
        return isTodayHasAwarded_;
      }
      /**
       * <code>bool is_today_has_awarded = 13;</code>
       * @param value The isTodayHasAwarded to set.
       * @return This builder for chaining.
       */
      public Builder setIsTodayHasAwarded(boolean value) {
        
        isTodayHasAwarded_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_today_has_awarded = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsTodayHasAwarded() {
        
        isTodayHasAwarded_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> usedFlowerNumMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetUsedFlowerNumMap() {
        if (usedFlowerNumMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              UsedFlowerNumMapDefaultEntryHolder.defaultEntry);
        }
        return usedFlowerNumMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableUsedFlowerNumMap() {
        onChanged();;
        if (usedFlowerNumMap_ == null) {
          usedFlowerNumMap_ = com.google.protobuf.MapField.newMapField(
              UsedFlowerNumMapDefaultEntryHolder.defaultEntry);
        }
        if (!usedFlowerNumMap_.isMutable()) {
          usedFlowerNumMap_ = usedFlowerNumMap_.copy();
        }
        return usedFlowerNumMap_;
      }

      public int getUsedFlowerNumMapCount() {
        return internalGetUsedFlowerNumMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; used_flower_num_map = 7;</code>
       */

      @java.lang.Override
      public boolean containsUsedFlowerNumMap(
          int key) {
        
        return internalGetUsedFlowerNumMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getUsedFlowerNumMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getUsedFlowerNumMap() {
        return getUsedFlowerNumMapMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; used_flower_num_map = 7;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getUsedFlowerNumMapMap() {
        return internalGetUsedFlowerNumMap().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; used_flower_num_map = 7;</code>
       */
      @java.lang.Override

      public int getUsedFlowerNumMapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetUsedFlowerNumMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; used_flower_num_map = 7;</code>
       */
      @java.lang.Override

      public int getUsedFlowerNumMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetUsedFlowerNumMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearUsedFlowerNumMap() {
        internalGetMutableUsedFlowerNumMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; used_flower_num_map = 7;</code>
       */

      public Builder removeUsedFlowerNumMap(
          int key) {
        
        internalGetMutableUsedFlowerNumMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableUsedFlowerNumMap() {
        return internalGetMutableUsedFlowerNumMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; used_flower_num_map = 7;</code>
       */
      public Builder putUsedFlowerNumMap(
          int key,
          int value) {
        
        
        internalGetMutableUsedFlowerNumMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; used_flower_num_map = 7;</code>
       */

      public Builder putAllUsedFlowerNumMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableUsedFlowerNumMap().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PlantFlowerActivityDetailInfo)
    }

    // @@protoc_insertion_point(class_scope:PlantFlowerActivityDetailInfo)
    private static final emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo();
    }

    public static emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlantFlowerActivityDetailInfo>
        PARSER = new com.google.protobuf.AbstractParser<PlantFlowerActivityDetailInfo>() {
      @java.lang.Override
      public PlantFlowerActivityDetailInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlantFlowerActivityDetailInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlantFlowerActivityDetailInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlantFlowerActivityDetailInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.grasscutter.net.proto.PlantFlowerActivityDetailInfoOuterClass.PlantFlowerActivityDetailInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PlantFlowerActivityDetailInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PlantFlowerActivityDetailInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PlantFlowerActivityDetailInfo_WishFlowerNumMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PlantFlowerActivityDetailInfo_WishFlowerNumMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PlantFlowerActivityDetailInfo_UsedFlowerNumMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PlantFlowerActivityDetailInfo_UsedFlowerNumMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n#PlantFlowerActivityDetailInfo.proto\"\241\003" +
      "\n\035PlantFlowerActivityDetailInfo\022\031\n\021is_co" +
      "ntent_closed\030\003 \001(\010\022Q\n\023wish_flower_num_ma" +
      "p\030\n \003(\01324.PlantFlowerActivityDetailInfo." +
      "WishFlowerNumMapEntry\022\034\n\024today_seed_rewa" +
      "rd_id\030\013 \001(\r\022\021\n\tday_index\030\001 \001(\r\022\034\n\024is_tod" +
      "ay_has_awarded\030\r \001(\010\022Q\n\023used_flower_num_" +
      "map\030\007 \003(\01324.PlantFlowerActivityDetailInf" +
      "o.UsedFlowerNumMapEntry\0327\n\025WishFlowerNum" +
      "MapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001" +
      "\0327\n\025UsedFlowerNumMapEntry\022\013\n\003key\030\001 \001(\r\022\r" +
      "\n\005value\030\002 \001(\r:\0028\001B\033\n\031emu.grasscutter.net" +
      ".protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_PlantFlowerActivityDetailInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_PlantFlowerActivityDetailInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PlantFlowerActivityDetailInfo_descriptor,
        new java.lang.String[] { "IsContentClosed", "WishFlowerNumMap", "TodaySeedRewardId", "DayIndex", "IsTodayHasAwarded", "UsedFlowerNumMap", });
    internal_static_PlantFlowerActivityDetailInfo_WishFlowerNumMapEntry_descriptor =
      internal_static_PlantFlowerActivityDetailInfo_descriptor.getNestedTypes().get(0);
    internal_static_PlantFlowerActivityDetailInfo_WishFlowerNumMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PlantFlowerActivityDetailInfo_WishFlowerNumMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_PlantFlowerActivityDetailInfo_UsedFlowerNumMapEntry_descriptor =
      internal_static_PlantFlowerActivityDetailInfo_descriptor.getNestedTypes().get(1);
    internal_static_PlantFlowerActivityDetailInfo_UsedFlowerNumMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PlantFlowerActivityDetailInfo_UsedFlowerNumMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
