// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EffigyChallengeV2LevelData.proto

package emu.grasscutter.net.proto;

public final class EffigyChallengeV2LevelDataOuterClass {
  private EffigyChallengeV2LevelDataOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface EffigyChallengeV2LevelDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EffigyChallengeV2LevelData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 challenge_mode_difficulty_pass = 1;</code>
     * @return The challengeModeDifficultyPass.
     */
    int getChallengeModeDifficultyPass();

    /**
     * <code>uint32 level_id = 5;</code>
     * @return The levelId.
     */
    int getLevelId();

    /**
     * <code>uint32 challenge_mode_last_choose_skill_no = 10;</code>
     * @return The challengeModeLastChooseSkillNo.
     */
    int getChallengeModeLastChooseSkillNo();

    /**
     * <code>uint32 best_cost_time = 12;</code>
     * @return The bestCostTime.
     */
    int getBestCostTime();

    /**
     * <code>bool is_level_open = 7;</code>
     * @return The isLevelOpen.
     */
    boolean getIsLevelOpen();

    /**
     * <code>uint32 challenge_mode_difficulty_open = 13;</code>
     * @return The challengeModeDifficultyOpen.
     */
    int getChallengeModeDifficultyOpen();
  }
  /**
   * Protobuf type {@code EffigyChallengeV2LevelData}
   */
  public static final class EffigyChallengeV2LevelData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:EffigyChallengeV2LevelData)
      EffigyChallengeV2LevelDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EffigyChallengeV2LevelData.newBuilder() to construct.
    private EffigyChallengeV2LevelData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EffigyChallengeV2LevelData() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EffigyChallengeV2LevelData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EffigyChallengeV2LevelData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              challengeModeDifficultyPass_ = input.readUInt32();
              break;
            }
            case 40: {

              levelId_ = input.readUInt32();
              break;
            }
            case 56: {

              isLevelOpen_ = input.readBool();
              break;
            }
            case 80: {

              challengeModeLastChooseSkillNo_ = input.readUInt32();
              break;
            }
            case 96: {

              bestCostTime_ = input.readUInt32();
              break;
            }
            case 104: {

              challengeModeDifficultyOpen_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.internal_static_EffigyChallengeV2LevelData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.internal_static_EffigyChallengeV2LevelData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData.class, emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData.Builder.class);
    }

    public static final int CHALLENGE_MODE_DIFFICULTY_PASS_FIELD_NUMBER = 1;
    private int challengeModeDifficultyPass_;
    /**
     * <code>uint32 challenge_mode_difficulty_pass = 1;</code>
     * @return The challengeModeDifficultyPass.
     */
    @java.lang.Override
    public int getChallengeModeDifficultyPass() {
      return challengeModeDifficultyPass_;
    }

    public static final int LEVEL_ID_FIELD_NUMBER = 5;
    private int levelId_;
    /**
     * <code>uint32 level_id = 5;</code>
     * @return The levelId.
     */
    @java.lang.Override
    public int getLevelId() {
      return levelId_;
    }

    public static final int CHALLENGE_MODE_LAST_CHOOSE_SKILL_NO_FIELD_NUMBER = 10;
    private int challengeModeLastChooseSkillNo_;
    /**
     * <code>uint32 challenge_mode_last_choose_skill_no = 10;</code>
     * @return The challengeModeLastChooseSkillNo.
     */
    @java.lang.Override
    public int getChallengeModeLastChooseSkillNo() {
      return challengeModeLastChooseSkillNo_;
    }

    public static final int BEST_COST_TIME_FIELD_NUMBER = 12;
    private int bestCostTime_;
    /**
     * <code>uint32 best_cost_time = 12;</code>
     * @return The bestCostTime.
     */
    @java.lang.Override
    public int getBestCostTime() {
      return bestCostTime_;
    }

    public static final int IS_LEVEL_OPEN_FIELD_NUMBER = 7;
    private boolean isLevelOpen_;
    /**
     * <code>bool is_level_open = 7;</code>
     * @return The isLevelOpen.
     */
    @java.lang.Override
    public boolean getIsLevelOpen() {
      return isLevelOpen_;
    }

    public static final int CHALLENGE_MODE_DIFFICULTY_OPEN_FIELD_NUMBER = 13;
    private int challengeModeDifficultyOpen_;
    /**
     * <code>uint32 challenge_mode_difficulty_open = 13;</code>
     * @return The challengeModeDifficultyOpen.
     */
    @java.lang.Override
    public int getChallengeModeDifficultyOpen() {
      return challengeModeDifficultyOpen_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (challengeModeDifficultyPass_ != 0) {
        output.writeUInt32(1, challengeModeDifficultyPass_);
      }
      if (levelId_ != 0) {
        output.writeUInt32(5, levelId_);
      }
      if (isLevelOpen_ != false) {
        output.writeBool(7, isLevelOpen_);
      }
      if (challengeModeLastChooseSkillNo_ != 0) {
        output.writeUInt32(10, challengeModeLastChooseSkillNo_);
      }
      if (bestCostTime_ != 0) {
        output.writeUInt32(12, bestCostTime_);
      }
      if (challengeModeDifficultyOpen_ != 0) {
        output.writeUInt32(13, challengeModeDifficultyOpen_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (challengeModeDifficultyPass_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, challengeModeDifficultyPass_);
      }
      if (levelId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, levelId_);
      }
      if (isLevelOpen_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isLevelOpen_);
      }
      if (challengeModeLastChooseSkillNo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, challengeModeLastChooseSkillNo_);
      }
      if (bestCostTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, bestCostTime_);
      }
      if (challengeModeDifficultyOpen_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, challengeModeDifficultyOpen_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData)) {
        return super.equals(obj);
      }
      emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData other = (emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData) obj;

      if (getChallengeModeDifficultyPass()
          != other.getChallengeModeDifficultyPass()) return false;
      if (getLevelId()
          != other.getLevelId()) return false;
      if (getChallengeModeLastChooseSkillNo()
          != other.getChallengeModeLastChooseSkillNo()) return false;
      if (getBestCostTime()
          != other.getBestCostTime()) return false;
      if (getIsLevelOpen()
          != other.getIsLevelOpen()) return false;
      if (getChallengeModeDifficultyOpen()
          != other.getChallengeModeDifficultyOpen()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CHALLENGE_MODE_DIFFICULTY_PASS_FIELD_NUMBER;
      hash = (53 * hash) + getChallengeModeDifficultyPass();
      hash = (37 * hash) + LEVEL_ID_FIELD_NUMBER;
      hash = (53 * hash) + getLevelId();
      hash = (37 * hash) + CHALLENGE_MODE_LAST_CHOOSE_SKILL_NO_FIELD_NUMBER;
      hash = (53 * hash) + getChallengeModeLastChooseSkillNo();
      hash = (37 * hash) + BEST_COST_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getBestCostTime();
      hash = (37 * hash) + IS_LEVEL_OPEN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsLevelOpen());
      hash = (37 * hash) + CHALLENGE_MODE_DIFFICULTY_OPEN_FIELD_NUMBER;
      hash = (53 * hash) + getChallengeModeDifficultyOpen();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EffigyChallengeV2LevelData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:EffigyChallengeV2LevelData)
        emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.internal_static_EffigyChallengeV2LevelData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.internal_static_EffigyChallengeV2LevelData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData.class, emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData.Builder.class);
      }

      // Construct using emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        challengeModeDifficultyPass_ = 0;

        levelId_ = 0;

        challengeModeLastChooseSkillNo_ = 0;

        bestCostTime_ = 0;

        isLevelOpen_ = false;

        challengeModeDifficultyOpen_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.internal_static_EffigyChallengeV2LevelData_descriptor;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData getDefaultInstanceForType() {
        return emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData.getDefaultInstance();
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData build() {
        emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData buildPartial() {
        emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData result = new emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData(this);
        result.challengeModeDifficultyPass_ = challengeModeDifficultyPass_;
        result.levelId_ = levelId_;
        result.challengeModeLastChooseSkillNo_ = challengeModeLastChooseSkillNo_;
        result.bestCostTime_ = bestCostTime_;
        result.isLevelOpen_ = isLevelOpen_;
        result.challengeModeDifficultyOpen_ = challengeModeDifficultyOpen_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData) {
          return mergeFrom((emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData other) {
        if (other == emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData.getDefaultInstance()) return this;
        if (other.getChallengeModeDifficultyPass() != 0) {
          setChallengeModeDifficultyPass(other.getChallengeModeDifficultyPass());
        }
        if (other.getLevelId() != 0) {
          setLevelId(other.getLevelId());
        }
        if (other.getChallengeModeLastChooseSkillNo() != 0) {
          setChallengeModeLastChooseSkillNo(other.getChallengeModeLastChooseSkillNo());
        }
        if (other.getBestCostTime() != 0) {
          setBestCostTime(other.getBestCostTime());
        }
        if (other.getIsLevelOpen() != false) {
          setIsLevelOpen(other.getIsLevelOpen());
        }
        if (other.getChallengeModeDifficultyOpen() != 0) {
          setChallengeModeDifficultyOpen(other.getChallengeModeDifficultyOpen());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int challengeModeDifficultyPass_ ;
      /**
       * <code>uint32 challenge_mode_difficulty_pass = 1;</code>
       * @return The challengeModeDifficultyPass.
       */
      @java.lang.Override
      public int getChallengeModeDifficultyPass() {
        return challengeModeDifficultyPass_;
      }
      /**
       * <code>uint32 challenge_mode_difficulty_pass = 1;</code>
       * @param value The challengeModeDifficultyPass to set.
       * @return This builder for chaining.
       */
      public Builder setChallengeModeDifficultyPass(int value) {
        
        challengeModeDifficultyPass_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 challenge_mode_difficulty_pass = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChallengeModeDifficultyPass() {
        
        challengeModeDifficultyPass_ = 0;
        onChanged();
        return this;
      }

      private int levelId_ ;
      /**
       * <code>uint32 level_id = 5;</code>
       * @return The levelId.
       */
      @java.lang.Override
      public int getLevelId() {
        return levelId_;
      }
      /**
       * <code>uint32 level_id = 5;</code>
       * @param value The levelId to set.
       * @return This builder for chaining.
       */
      public Builder setLevelId(int value) {
        
        levelId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 level_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLevelId() {
        
        levelId_ = 0;
        onChanged();
        return this;
      }

      private int challengeModeLastChooseSkillNo_ ;
      /**
       * <code>uint32 challenge_mode_last_choose_skill_no = 10;</code>
       * @return The challengeModeLastChooseSkillNo.
       */
      @java.lang.Override
      public int getChallengeModeLastChooseSkillNo() {
        return challengeModeLastChooseSkillNo_;
      }
      /**
       * <code>uint32 challenge_mode_last_choose_skill_no = 10;</code>
       * @param value The challengeModeLastChooseSkillNo to set.
       * @return This builder for chaining.
       */
      public Builder setChallengeModeLastChooseSkillNo(int value) {
        
        challengeModeLastChooseSkillNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 challenge_mode_last_choose_skill_no = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearChallengeModeLastChooseSkillNo() {
        
        challengeModeLastChooseSkillNo_ = 0;
        onChanged();
        return this;
      }

      private int bestCostTime_ ;
      /**
       * <code>uint32 best_cost_time = 12;</code>
       * @return The bestCostTime.
       */
      @java.lang.Override
      public int getBestCostTime() {
        return bestCostTime_;
      }
      /**
       * <code>uint32 best_cost_time = 12;</code>
       * @param value The bestCostTime to set.
       * @return This builder for chaining.
       */
      public Builder setBestCostTime(int value) {
        
        bestCostTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 best_cost_time = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearBestCostTime() {
        
        bestCostTime_ = 0;
        onChanged();
        return this;
      }

      private boolean isLevelOpen_ ;
      /**
       * <code>bool is_level_open = 7;</code>
       * @return The isLevelOpen.
       */
      @java.lang.Override
      public boolean getIsLevelOpen() {
        return isLevelOpen_;
      }
      /**
       * <code>bool is_level_open = 7;</code>
       * @param value The isLevelOpen to set.
       * @return This builder for chaining.
       */
      public Builder setIsLevelOpen(boolean value) {
        
        isLevelOpen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_level_open = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsLevelOpen() {
        
        isLevelOpen_ = false;
        onChanged();
        return this;
      }

      private int challengeModeDifficultyOpen_ ;
      /**
       * <code>uint32 challenge_mode_difficulty_open = 13;</code>
       * @return The challengeModeDifficultyOpen.
       */
      @java.lang.Override
      public int getChallengeModeDifficultyOpen() {
        return challengeModeDifficultyOpen_;
      }
      /**
       * <code>uint32 challenge_mode_difficulty_open = 13;</code>
       * @param value The challengeModeDifficultyOpen to set.
       * @return This builder for chaining.
       */
      public Builder setChallengeModeDifficultyOpen(int value) {
        
        challengeModeDifficultyOpen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 challenge_mode_difficulty_open = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearChallengeModeDifficultyOpen() {
        
        challengeModeDifficultyOpen_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:EffigyChallengeV2LevelData)
    }

    // @@protoc_insertion_point(class_scope:EffigyChallengeV2LevelData)
    private static final emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData();
    }

    public static emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EffigyChallengeV2LevelData>
        PARSER = new com.google.protobuf.AbstractParser<EffigyChallengeV2LevelData>() {
      @java.lang.Override
      public EffigyChallengeV2LevelData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EffigyChallengeV2LevelData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EffigyChallengeV2LevelData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EffigyChallengeV2LevelData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.grasscutter.net.proto.EffigyChallengeV2LevelDataOuterClass.EffigyChallengeV2LevelData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EffigyChallengeV2LevelData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_EffigyChallengeV2LevelData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n EffigyChallengeV2LevelData.proto\"\332\001\n\032E" +
      "ffigyChallengeV2LevelData\022&\n\036challenge_m" +
      "ode_difficulty_pass\030\001 \001(\r\022\020\n\010level_id\030\005 " +
      "\001(\r\022+\n#challenge_mode_last_choose_skill_" +
      "no\030\n \001(\r\022\026\n\016best_cost_time\030\014 \001(\r\022\025\n\ris_l" +
      "evel_open\030\007 \001(\010\022&\n\036challenge_mode_diffic" +
      "ulty_open\030\r \001(\rB\033\n\031emu.grasscutter.net.p" +
      "rotob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_EffigyChallengeV2LevelData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_EffigyChallengeV2LevelData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_EffigyChallengeV2LevelData_descriptor,
        new java.lang.String[] { "ChallengeModeDifficultyPass", "LevelId", "ChallengeModeLastChooseSkillNo", "BestCostTime", "IsLevelOpen", "ChallengeModeDifficultyOpen", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
