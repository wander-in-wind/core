// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GCGDuel.proto

package emu.grasscutter.net.proto;

public final class GCGDuelOuterClass {
  private GCGDuelOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GCGDuelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GCGDuel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 server_seq = 3;</code>
     * @return The serverSeq.
     */
    int getServerSeq();

    /**
     * <code>repeated .GCGPlayerField field_list = 7;</code>
     */
    java.util.List<emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField> 
        getFieldListList();
    /**
     * <code>repeated .GCGPlayerField field_list = 7;</code>
     */
    emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField getFieldList(int index);
    /**
     * <code>repeated .GCGPlayerField field_list = 7;</code>
     */
    int getFieldListCount();
    /**
     * <code>repeated .GCGPlayerField field_list = 7;</code>
     */
    java.util.List<? extends emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerFieldOrBuilder> 
        getFieldListOrBuilderList();
    /**
     * <code>repeated .GCGPlayerField field_list = 7;</code>
     */
    emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerFieldOrBuilder getFieldListOrBuilder(
        int index);

    /**
     * <code>.GCGGameBusinessType business_type = 14;</code>
     * @return The enum numeric value on the wire for businessType.
     */
    int getBusinessTypeValue();
    /**
     * <code>.GCGGameBusinessType business_type = 14;</code>
     * @return The businessType.
     */
    emu.grasscutter.net.proto.GCGGameBusinessTypeOuterClass.GCGGameBusinessType getBusinessType();

    /**
     * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
     */
    java.util.List<emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge> 
        getChallengeListList();
    /**
     * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
     */
    emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge getChallengeList(int index);
    /**
     * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
     */
    int getChallengeListCount();
    /**
     * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
     */
    java.util.List<? extends emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallengeOrBuilder> 
        getChallengeListOrBuilderList();
    /**
     * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
     */
    emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallengeOrBuilder getChallengeListOrBuilder(
        int index);

    /**
     * <code>uint32 game_id = 11;</code>
     * @return The gameId.
     */
    int getGameId();

    /**
     * <code>uint32 controller_id = 13;</code>
     * @return The controllerId.
     */
    int getControllerId();

    /**
     * <code>uint32 round = 15;</code>
     * @return The round.
     */
    int getRound();

    /**
     * <code>uint32 cur_controller_id = 12;</code>
     * @return The curControllerId.
     */
    int getCurControllerId();

    /**
     * <code>repeated .GCGPVEIntention intention_list = 1;</code>
     */
    java.util.List<emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention> 
        getIntentionListList();
    /**
     * <code>repeated .GCGPVEIntention intention_list = 1;</code>
     */
    emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention getIntentionList(int index);
    /**
     * <code>repeated .GCGPVEIntention intention_list = 1;</code>
     */
    int getIntentionListCount();
    /**
     * <code>repeated .GCGPVEIntention intention_list = 1;</code>
     */
    java.util.List<? extends emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntentionOrBuilder> 
        getIntentionListOrBuilderList();
    /**
     * <code>repeated .GCGPVEIntention intention_list = 1;</code>
     */
    emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntentionOrBuilder getIntentionListOrBuilder(
        int index);

    /**
     * <code>.GCGCostReviseInfo cost_revise = 10;</code>
     * @return Whether the costRevise field is set.
     */
    boolean hasCostRevise();
    /**
     * <code>.GCGCostReviseInfo cost_revise = 10;</code>
     * @return The costRevise.
     */
    emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo getCostRevise();
    /**
     * <code>.GCGCostReviseInfo cost_revise = 10;</code>
     */
    emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfoOrBuilder getCostReviseOrBuilder();

    /**
     * <code>repeated uint32 card_id_list = 4;</code>
     * @return A list containing the cardIdList.
     */
    java.util.List<java.lang.Integer> getCardIdListList();
    /**
     * <code>repeated uint32 card_id_list = 4;</code>
     * @return The count of cardIdList.
     */
    int getCardIdListCount();
    /**
     * <code>repeated uint32 card_id_list = 4;</code>
     * @param index The index of the element to return.
     * @return The cardIdList at the given index.
     */
    int getCardIdList(int index);

    /**
     * <code>repeated .GCGCard card_list = 9;</code>
     */
    java.util.List<emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard> 
        getCardListList();
    /**
     * <code>repeated .GCGCard card_list = 9;</code>
     */
    emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard getCardList(int index);
    /**
     * <code>repeated .GCGCard card_list = 9;</code>
     */
    int getCardListCount();
    /**
     * <code>repeated .GCGCard card_list = 9;</code>
     */
    java.util.List<? extends emu.grasscutter.net.proto.GCGCardOuterClass.GCGCardOrBuilder> 
        getCardListOrBuilderList();
    /**
     * <code>repeated .GCGCard card_list = 9;</code>
     */
    emu.grasscutter.net.proto.GCGCardOuterClass.GCGCardOrBuilder getCardListOrBuilder(
        int index);

    /**
     * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
     */
    java.util.List<emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo> 
        getShowInfoListList();
    /**
     * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
     */
    emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo getShowInfoList(int index);
    /**
     * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
     */
    int getShowInfoListCount();
    /**
     * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
     */
    java.util.List<? extends emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfoOrBuilder> 
        getShowInfoListOrBuilderList();
    /**
     * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
     */
    emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfoOrBuilder getShowInfoListOrBuilder(
        int index);

    /**
     * <code>uint32 game_type = 2;</code>
     * @return The gameType.
     */
    int getGameType();

    /**
     * <code>.GCGPhase phase = 8;</code>
     * @return Whether the phase field is set.
     */
    boolean hasPhase();
    /**
     * <code>.GCGPhase phase = 8;</code>
     * @return The phase.
     */
    emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase getPhase();
    /**
     * <code>.GCGPhase phase = 8;</code>
     */
    emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhaseOrBuilder getPhaseOrBuilder();
  }
  /**
   * Protobuf type {@code GCGDuel}
   */
  public static final class GCGDuel extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GCGDuel)
      GCGDuelOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GCGDuel.newBuilder() to construct.
    private GCGDuel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GCGDuel() {
      fieldList_ = java.util.Collections.emptyList();
      businessType_ = 0;
      challengeList_ = java.util.Collections.emptyList();
      intentionList_ = java.util.Collections.emptyList();
      cardIdList_ = emptyIntList();
      cardList_ = java.util.Collections.emptyList();
      showInfoList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GCGDuel();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GCGDuel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                intentionList_ = new java.util.ArrayList<emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention>();
                mutable_bitField0_ |= 0x00000004;
              }
              intentionList_.add(
                  input.readMessage(emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention.parser(), extensionRegistry));
              break;
            }
            case 16: {

              gameType_ = input.readUInt32();
              break;
            }
            case 24: {

              serverSeq_ = input.readUInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                cardIdList_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              cardIdList_.addInt(input.readUInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                cardIdList_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardIdList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                challengeList_ = new java.util.ArrayList<emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge>();
                mutable_bitField0_ |= 0x00000002;
              }
              challengeList_.add(
                  input.readMessage(emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge.parser(), extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                showInfoList_ = new java.util.ArrayList<emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo>();
                mutable_bitField0_ |= 0x00000020;
              }
              showInfoList_.add(
                  input.readMessage(emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo.parser(), extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                fieldList_ = new java.util.ArrayList<emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField>();
                mutable_bitField0_ |= 0x00000001;
              }
              fieldList_.add(
                  input.readMessage(emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField.parser(), extensionRegistry));
              break;
            }
            case 66: {
              emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase.Builder subBuilder = null;
              if (phase_ != null) {
                subBuilder = phase_.toBuilder();
              }
              phase_ = input.readMessage(emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(phase_);
                phase_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                cardList_ = new java.util.ArrayList<emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard>();
                mutable_bitField0_ |= 0x00000010;
              }
              cardList_.add(
                  input.readMessage(emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard.parser(), extensionRegistry));
              break;
            }
            case 82: {
              emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo.Builder subBuilder = null;
              if (costRevise_ != null) {
                subBuilder = costRevise_.toBuilder();
              }
              costRevise_ = input.readMessage(emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(costRevise_);
                costRevise_ = subBuilder.buildPartial();
              }

              break;
            }
            case 88: {

              gameId_ = input.readUInt32();
              break;
            }
            case 96: {

              curControllerId_ = input.readUInt32();
              break;
            }
            case 104: {

              controllerId_ = input.readUInt32();
              break;
            }
            case 112: {
              int rawValue = input.readEnum();

              businessType_ = rawValue;
              break;
            }
            case 120: {

              round_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          intentionList_ = java.util.Collections.unmodifiableList(intentionList_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          cardIdList_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          challengeList_ = java.util.Collections.unmodifiableList(challengeList_);
        }
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          showInfoList_ = java.util.Collections.unmodifiableList(showInfoList_);
        }
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          fieldList_ = java.util.Collections.unmodifiableList(fieldList_);
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          cardList_ = java.util.Collections.unmodifiableList(cardList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.GCGDuelOuterClass.internal_static_GCGDuel_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.grasscutter.net.proto.GCGDuelOuterClass.internal_static_GCGDuel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel.class, emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel.Builder.class);
    }

    public static final int SERVER_SEQ_FIELD_NUMBER = 3;
    private int serverSeq_;
    /**
     * <code>uint32 server_seq = 3;</code>
     * @return The serverSeq.
     */
    @java.lang.Override
    public int getServerSeq() {
      return serverSeq_;
    }

    public static final int FIELD_LIST_FIELD_NUMBER = 7;
    private java.util.List<emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField> fieldList_;
    /**
     * <code>repeated .GCGPlayerField field_list = 7;</code>
     */
    @java.lang.Override
    public java.util.List<emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField> getFieldListList() {
      return fieldList_;
    }
    /**
     * <code>repeated .GCGPlayerField field_list = 7;</code>
     */
    @java.lang.Override
    public java.util.List<? extends emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerFieldOrBuilder> 
        getFieldListOrBuilderList() {
      return fieldList_;
    }
    /**
     * <code>repeated .GCGPlayerField field_list = 7;</code>
     */
    @java.lang.Override
    public int getFieldListCount() {
      return fieldList_.size();
    }
    /**
     * <code>repeated .GCGPlayerField field_list = 7;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField getFieldList(int index) {
      return fieldList_.get(index);
    }
    /**
     * <code>repeated .GCGPlayerField field_list = 7;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerFieldOrBuilder getFieldListOrBuilder(
        int index) {
      return fieldList_.get(index);
    }

    public static final int BUSINESS_TYPE_FIELD_NUMBER = 14;
    private int businessType_;
    /**
     * <code>.GCGGameBusinessType business_type = 14;</code>
     * @return The enum numeric value on the wire for businessType.
     */
    @java.lang.Override public int getBusinessTypeValue() {
      return businessType_;
    }
    /**
     * <code>.GCGGameBusinessType business_type = 14;</code>
     * @return The businessType.
     */
    @java.lang.Override public emu.grasscutter.net.proto.GCGGameBusinessTypeOuterClass.GCGGameBusinessType getBusinessType() {
      @SuppressWarnings("deprecation")
      emu.grasscutter.net.proto.GCGGameBusinessTypeOuterClass.GCGGameBusinessType result = emu.grasscutter.net.proto.GCGGameBusinessTypeOuterClass.GCGGameBusinessType.valueOf(businessType_);
      return result == null ? emu.grasscutter.net.proto.GCGGameBusinessTypeOuterClass.GCGGameBusinessType.UNRECOGNIZED : result;
    }

    public static final int CHALLENGE_LIST_FIELD_NUMBER = 5;
    private java.util.List<emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge> challengeList_;
    /**
     * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
     */
    @java.lang.Override
    public java.util.List<emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge> getChallengeListList() {
      return challengeList_;
    }
    /**
     * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallengeOrBuilder> 
        getChallengeListOrBuilderList() {
      return challengeList_;
    }
    /**
     * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
     */
    @java.lang.Override
    public int getChallengeListCount() {
      return challengeList_.size();
    }
    /**
     * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge getChallengeList(int index) {
      return challengeList_.get(index);
    }
    /**
     * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallengeOrBuilder getChallengeListOrBuilder(
        int index) {
      return challengeList_.get(index);
    }

    public static final int GAME_ID_FIELD_NUMBER = 11;
    private int gameId_;
    /**
     * <code>uint32 game_id = 11;</code>
     * @return The gameId.
     */
    @java.lang.Override
    public int getGameId() {
      return gameId_;
    }

    public static final int CONTROLLER_ID_FIELD_NUMBER = 13;
    private int controllerId_;
    /**
     * <code>uint32 controller_id = 13;</code>
     * @return The controllerId.
     */
    @java.lang.Override
    public int getControllerId() {
      return controllerId_;
    }

    public static final int ROUND_FIELD_NUMBER = 15;
    private int round_;
    /**
     * <code>uint32 round = 15;</code>
     * @return The round.
     */
    @java.lang.Override
    public int getRound() {
      return round_;
    }

    public static final int CUR_CONTROLLER_ID_FIELD_NUMBER = 12;
    private int curControllerId_;
    /**
     * <code>uint32 cur_controller_id = 12;</code>
     * @return The curControllerId.
     */
    @java.lang.Override
    public int getCurControllerId() {
      return curControllerId_;
    }

    public static final int INTENTION_LIST_FIELD_NUMBER = 1;
    private java.util.List<emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention> intentionList_;
    /**
     * <code>repeated .GCGPVEIntention intention_list = 1;</code>
     */
    @java.lang.Override
    public java.util.List<emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention> getIntentionListList() {
      return intentionList_;
    }
    /**
     * <code>repeated .GCGPVEIntention intention_list = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntentionOrBuilder> 
        getIntentionListOrBuilderList() {
      return intentionList_;
    }
    /**
     * <code>repeated .GCGPVEIntention intention_list = 1;</code>
     */
    @java.lang.Override
    public int getIntentionListCount() {
      return intentionList_.size();
    }
    /**
     * <code>repeated .GCGPVEIntention intention_list = 1;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention getIntentionList(int index) {
      return intentionList_.get(index);
    }
    /**
     * <code>repeated .GCGPVEIntention intention_list = 1;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntentionOrBuilder getIntentionListOrBuilder(
        int index) {
      return intentionList_.get(index);
    }

    public static final int COST_REVISE_FIELD_NUMBER = 10;
    private emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo costRevise_;
    /**
     * <code>.GCGCostReviseInfo cost_revise = 10;</code>
     * @return Whether the costRevise field is set.
     */
    @java.lang.Override
    public boolean hasCostRevise() {
      return costRevise_ != null;
    }
    /**
     * <code>.GCGCostReviseInfo cost_revise = 10;</code>
     * @return The costRevise.
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo getCostRevise() {
      return costRevise_ == null ? emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo.getDefaultInstance() : costRevise_;
    }
    /**
     * <code>.GCGCostReviseInfo cost_revise = 10;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfoOrBuilder getCostReviseOrBuilder() {
      return getCostRevise();
    }

    public static final int CARD_ID_LIST_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList cardIdList_;
    /**
     * <code>repeated uint32 card_id_list = 4;</code>
     * @return A list containing the cardIdList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getCardIdListList() {
      return cardIdList_;
    }
    /**
     * <code>repeated uint32 card_id_list = 4;</code>
     * @return The count of cardIdList.
     */
    public int getCardIdListCount() {
      return cardIdList_.size();
    }
    /**
     * <code>repeated uint32 card_id_list = 4;</code>
     * @param index The index of the element to return.
     * @return The cardIdList at the given index.
     */
    public int getCardIdList(int index) {
      return cardIdList_.getInt(index);
    }
    private int cardIdListMemoizedSerializedSize = -1;

    public static final int CARD_LIST_FIELD_NUMBER = 9;
    private java.util.List<emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard> cardList_;
    /**
     * <code>repeated .GCGCard card_list = 9;</code>
     */
    @java.lang.Override
    public java.util.List<emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard> getCardListList() {
      return cardList_;
    }
    /**
     * <code>repeated .GCGCard card_list = 9;</code>
     */
    @java.lang.Override
    public java.util.List<? extends emu.grasscutter.net.proto.GCGCardOuterClass.GCGCardOrBuilder> 
        getCardListOrBuilderList() {
      return cardList_;
    }
    /**
     * <code>repeated .GCGCard card_list = 9;</code>
     */
    @java.lang.Override
    public int getCardListCount() {
      return cardList_.size();
    }
    /**
     * <code>repeated .GCGCard card_list = 9;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard getCardList(int index) {
      return cardList_.get(index);
    }
    /**
     * <code>repeated .GCGCard card_list = 9;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.GCGCardOuterClass.GCGCardOrBuilder getCardListOrBuilder(
        int index) {
      return cardList_.get(index);
    }

    public static final int SHOW_INFO_LIST_FIELD_NUMBER = 6;
    private java.util.List<emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo> showInfoList_;
    /**
     * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
     */
    @java.lang.Override
    public java.util.List<emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo> getShowInfoListList() {
      return showInfoList_;
    }
    /**
     * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfoOrBuilder> 
        getShowInfoListOrBuilderList() {
      return showInfoList_;
    }
    /**
     * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
     */
    @java.lang.Override
    public int getShowInfoListCount() {
      return showInfoList_.size();
    }
    /**
     * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo getShowInfoList(int index) {
      return showInfoList_.get(index);
    }
    /**
     * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfoOrBuilder getShowInfoListOrBuilder(
        int index) {
      return showInfoList_.get(index);
    }

    public static final int GAME_TYPE_FIELD_NUMBER = 2;
    private int gameType_;
    /**
     * <code>uint32 game_type = 2;</code>
     * @return The gameType.
     */
    @java.lang.Override
    public int getGameType() {
      return gameType_;
    }

    public static final int PHASE_FIELD_NUMBER = 8;
    private emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase phase_;
    /**
     * <code>.GCGPhase phase = 8;</code>
     * @return Whether the phase field is set.
     */
    @java.lang.Override
    public boolean hasPhase() {
      return phase_ != null;
    }
    /**
     * <code>.GCGPhase phase = 8;</code>
     * @return The phase.
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase getPhase() {
      return phase_ == null ? emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase.getDefaultInstance() : phase_;
    }
    /**
     * <code>.GCGPhase phase = 8;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhaseOrBuilder getPhaseOrBuilder() {
      return getPhase();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < intentionList_.size(); i++) {
        output.writeMessage(1, intentionList_.get(i));
      }
      if (gameType_ != 0) {
        output.writeUInt32(2, gameType_);
      }
      if (serverSeq_ != 0) {
        output.writeUInt32(3, serverSeq_);
      }
      if (getCardIdListList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(cardIdListMemoizedSerializedSize);
      }
      for (int i = 0; i < cardIdList_.size(); i++) {
        output.writeUInt32NoTag(cardIdList_.getInt(i));
      }
      for (int i = 0; i < challengeList_.size(); i++) {
        output.writeMessage(5, challengeList_.get(i));
      }
      for (int i = 0; i < showInfoList_.size(); i++) {
        output.writeMessage(6, showInfoList_.get(i));
      }
      for (int i = 0; i < fieldList_.size(); i++) {
        output.writeMessage(7, fieldList_.get(i));
      }
      if (phase_ != null) {
        output.writeMessage(8, getPhase());
      }
      for (int i = 0; i < cardList_.size(); i++) {
        output.writeMessage(9, cardList_.get(i));
      }
      if (costRevise_ != null) {
        output.writeMessage(10, getCostRevise());
      }
      if (gameId_ != 0) {
        output.writeUInt32(11, gameId_);
      }
      if (curControllerId_ != 0) {
        output.writeUInt32(12, curControllerId_);
      }
      if (controllerId_ != 0) {
        output.writeUInt32(13, controllerId_);
      }
      if (businessType_ != emu.grasscutter.net.proto.GCGGameBusinessTypeOuterClass.GCGGameBusinessType.GCG_GAME_BUSINESS_TYPE_NONE.getNumber()) {
        output.writeEnum(14, businessType_);
      }
      if (round_ != 0) {
        output.writeUInt32(15, round_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < intentionList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, intentionList_.get(i));
      }
      if (gameType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, gameType_);
      }
      if (serverSeq_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, serverSeq_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardIdList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(cardIdList_.getInt(i));
        }
        size += dataSize;
        if (!getCardIdListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        cardIdListMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < challengeList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, challengeList_.get(i));
      }
      for (int i = 0; i < showInfoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, showInfoList_.get(i));
      }
      for (int i = 0; i < fieldList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fieldList_.get(i));
      }
      if (phase_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getPhase());
      }
      for (int i = 0; i < cardList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, cardList_.get(i));
      }
      if (costRevise_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getCostRevise());
      }
      if (gameId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, gameId_);
      }
      if (curControllerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, curControllerId_);
      }
      if (controllerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, controllerId_);
      }
      if (businessType_ != emu.grasscutter.net.proto.GCGGameBusinessTypeOuterClass.GCGGameBusinessType.GCG_GAME_BUSINESS_TYPE_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(14, businessType_);
      }
      if (round_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, round_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel)) {
        return super.equals(obj);
      }
      emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel other = (emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel) obj;

      if (getServerSeq()
          != other.getServerSeq()) return false;
      if (!getFieldListList()
          .equals(other.getFieldListList())) return false;
      if (businessType_ != other.businessType_) return false;
      if (!getChallengeListList()
          .equals(other.getChallengeListList())) return false;
      if (getGameId()
          != other.getGameId()) return false;
      if (getControllerId()
          != other.getControllerId()) return false;
      if (getRound()
          != other.getRound()) return false;
      if (getCurControllerId()
          != other.getCurControllerId()) return false;
      if (!getIntentionListList()
          .equals(other.getIntentionListList())) return false;
      if (hasCostRevise() != other.hasCostRevise()) return false;
      if (hasCostRevise()) {
        if (!getCostRevise()
            .equals(other.getCostRevise())) return false;
      }
      if (!getCardIdListList()
          .equals(other.getCardIdListList())) return false;
      if (!getCardListList()
          .equals(other.getCardListList())) return false;
      if (!getShowInfoListList()
          .equals(other.getShowInfoListList())) return false;
      if (getGameType()
          != other.getGameType()) return false;
      if (hasPhase() != other.hasPhase()) return false;
      if (hasPhase()) {
        if (!getPhase()
            .equals(other.getPhase())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SERVER_SEQ_FIELD_NUMBER;
      hash = (53 * hash) + getServerSeq();
      if (getFieldListCount() > 0) {
        hash = (37 * hash) + FIELD_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getFieldListList().hashCode();
      }
      hash = (37 * hash) + BUSINESS_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + businessType_;
      if (getChallengeListCount() > 0) {
        hash = (37 * hash) + CHALLENGE_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getChallengeListList().hashCode();
      }
      hash = (37 * hash) + GAME_ID_FIELD_NUMBER;
      hash = (53 * hash) + getGameId();
      hash = (37 * hash) + CONTROLLER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getControllerId();
      hash = (37 * hash) + ROUND_FIELD_NUMBER;
      hash = (53 * hash) + getRound();
      hash = (37 * hash) + CUR_CONTROLLER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getCurControllerId();
      if (getIntentionListCount() > 0) {
        hash = (37 * hash) + INTENTION_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getIntentionListList().hashCode();
      }
      if (hasCostRevise()) {
        hash = (37 * hash) + COST_REVISE_FIELD_NUMBER;
        hash = (53 * hash) + getCostRevise().hashCode();
      }
      if (getCardIdListCount() > 0) {
        hash = (37 * hash) + CARD_ID_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getCardIdListList().hashCode();
      }
      if (getCardListCount() > 0) {
        hash = (37 * hash) + CARD_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getCardListList().hashCode();
      }
      if (getShowInfoListCount() > 0) {
        hash = (37 * hash) + SHOW_INFO_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getShowInfoListList().hashCode();
      }
      hash = (37 * hash) + GAME_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getGameType();
      if (hasPhase()) {
        hash = (37 * hash) + PHASE_FIELD_NUMBER;
        hash = (53 * hash) + getPhase().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GCGDuel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GCGDuel)
        emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.grasscutter.net.proto.GCGDuelOuterClass.internal_static_GCGDuel_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.grasscutter.net.proto.GCGDuelOuterClass.internal_static_GCGDuel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel.class, emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel.Builder.class);
      }

      // Construct using emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldListFieldBuilder();
          getChallengeListFieldBuilder();
          getIntentionListFieldBuilder();
          getCardListFieldBuilder();
          getShowInfoListFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        serverSeq_ = 0;

        if (fieldListBuilder_ == null) {
          fieldList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fieldListBuilder_.clear();
        }
        businessType_ = 0;

        if (challengeListBuilder_ == null) {
          challengeList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          challengeListBuilder_.clear();
        }
        gameId_ = 0;

        controllerId_ = 0;

        round_ = 0;

        curControllerId_ = 0;

        if (intentionListBuilder_ == null) {
          intentionList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          intentionListBuilder_.clear();
        }
        if (costReviseBuilder_ == null) {
          costRevise_ = null;
        } else {
          costRevise_ = null;
          costReviseBuilder_ = null;
        }
        cardIdList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        if (cardListBuilder_ == null) {
          cardList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          cardListBuilder_.clear();
        }
        if (showInfoListBuilder_ == null) {
          showInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          showInfoListBuilder_.clear();
        }
        gameType_ = 0;

        if (phaseBuilder_ == null) {
          phase_ = null;
        } else {
          phase_ = null;
          phaseBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.grasscutter.net.proto.GCGDuelOuterClass.internal_static_GCGDuel_descriptor;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel getDefaultInstanceForType() {
        return emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel.getDefaultInstance();
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel build() {
        emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel buildPartial() {
        emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel result = new emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel(this);
        int from_bitField0_ = bitField0_;
        result.serverSeq_ = serverSeq_;
        if (fieldListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            fieldList_ = java.util.Collections.unmodifiableList(fieldList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fieldList_ = fieldList_;
        } else {
          result.fieldList_ = fieldListBuilder_.build();
        }
        result.businessType_ = businessType_;
        if (challengeListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            challengeList_ = java.util.Collections.unmodifiableList(challengeList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.challengeList_ = challengeList_;
        } else {
          result.challengeList_ = challengeListBuilder_.build();
        }
        result.gameId_ = gameId_;
        result.controllerId_ = controllerId_;
        result.round_ = round_;
        result.curControllerId_ = curControllerId_;
        if (intentionListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            intentionList_ = java.util.Collections.unmodifiableList(intentionList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.intentionList_ = intentionList_;
        } else {
          result.intentionList_ = intentionListBuilder_.build();
        }
        if (costReviseBuilder_ == null) {
          result.costRevise_ = costRevise_;
        } else {
          result.costRevise_ = costReviseBuilder_.build();
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          cardIdList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.cardIdList_ = cardIdList_;
        if (cardListBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            cardList_ = java.util.Collections.unmodifiableList(cardList_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.cardList_ = cardList_;
        } else {
          result.cardList_ = cardListBuilder_.build();
        }
        if (showInfoListBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            showInfoList_ = java.util.Collections.unmodifiableList(showInfoList_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.showInfoList_ = showInfoList_;
        } else {
          result.showInfoList_ = showInfoListBuilder_.build();
        }
        result.gameType_ = gameType_;
        if (phaseBuilder_ == null) {
          result.phase_ = phase_;
        } else {
          result.phase_ = phaseBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel) {
          return mergeFrom((emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel other) {
        if (other == emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel.getDefaultInstance()) return this;
        if (other.getServerSeq() != 0) {
          setServerSeq(other.getServerSeq());
        }
        if (fieldListBuilder_ == null) {
          if (!other.fieldList_.isEmpty()) {
            if (fieldList_.isEmpty()) {
              fieldList_ = other.fieldList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFieldListIsMutable();
              fieldList_.addAll(other.fieldList_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldList_.isEmpty()) {
            if (fieldListBuilder_.isEmpty()) {
              fieldListBuilder_.dispose();
              fieldListBuilder_ = null;
              fieldList_ = other.fieldList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fieldListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldListFieldBuilder() : null;
            } else {
              fieldListBuilder_.addAllMessages(other.fieldList_);
            }
          }
        }
        if (other.businessType_ != 0) {
          setBusinessTypeValue(other.getBusinessTypeValue());
        }
        if (challengeListBuilder_ == null) {
          if (!other.challengeList_.isEmpty()) {
            if (challengeList_.isEmpty()) {
              challengeList_ = other.challengeList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureChallengeListIsMutable();
              challengeList_.addAll(other.challengeList_);
            }
            onChanged();
          }
        } else {
          if (!other.challengeList_.isEmpty()) {
            if (challengeListBuilder_.isEmpty()) {
              challengeListBuilder_.dispose();
              challengeListBuilder_ = null;
              challengeList_ = other.challengeList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              challengeListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChallengeListFieldBuilder() : null;
            } else {
              challengeListBuilder_.addAllMessages(other.challengeList_);
            }
          }
        }
        if (other.getGameId() != 0) {
          setGameId(other.getGameId());
        }
        if (other.getControllerId() != 0) {
          setControllerId(other.getControllerId());
        }
        if (other.getRound() != 0) {
          setRound(other.getRound());
        }
        if (other.getCurControllerId() != 0) {
          setCurControllerId(other.getCurControllerId());
        }
        if (intentionListBuilder_ == null) {
          if (!other.intentionList_.isEmpty()) {
            if (intentionList_.isEmpty()) {
              intentionList_ = other.intentionList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureIntentionListIsMutable();
              intentionList_.addAll(other.intentionList_);
            }
            onChanged();
          }
        } else {
          if (!other.intentionList_.isEmpty()) {
            if (intentionListBuilder_.isEmpty()) {
              intentionListBuilder_.dispose();
              intentionListBuilder_ = null;
              intentionList_ = other.intentionList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              intentionListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getIntentionListFieldBuilder() : null;
            } else {
              intentionListBuilder_.addAllMessages(other.intentionList_);
            }
          }
        }
        if (other.hasCostRevise()) {
          mergeCostRevise(other.getCostRevise());
        }
        if (!other.cardIdList_.isEmpty()) {
          if (cardIdList_.isEmpty()) {
            cardIdList_ = other.cardIdList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCardIdListIsMutable();
            cardIdList_.addAll(other.cardIdList_);
          }
          onChanged();
        }
        if (cardListBuilder_ == null) {
          if (!other.cardList_.isEmpty()) {
            if (cardList_.isEmpty()) {
              cardList_ = other.cardList_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCardListIsMutable();
              cardList_.addAll(other.cardList_);
            }
            onChanged();
          }
        } else {
          if (!other.cardList_.isEmpty()) {
            if (cardListBuilder_.isEmpty()) {
              cardListBuilder_.dispose();
              cardListBuilder_ = null;
              cardList_ = other.cardList_;
              bitField0_ = (bitField0_ & ~0x00000010);
              cardListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCardListFieldBuilder() : null;
            } else {
              cardListBuilder_.addAllMessages(other.cardList_);
            }
          }
        }
        if (showInfoListBuilder_ == null) {
          if (!other.showInfoList_.isEmpty()) {
            if (showInfoList_.isEmpty()) {
              showInfoList_ = other.showInfoList_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureShowInfoListIsMutable();
              showInfoList_.addAll(other.showInfoList_);
            }
            onChanged();
          }
        } else {
          if (!other.showInfoList_.isEmpty()) {
            if (showInfoListBuilder_.isEmpty()) {
              showInfoListBuilder_.dispose();
              showInfoListBuilder_ = null;
              showInfoList_ = other.showInfoList_;
              bitField0_ = (bitField0_ & ~0x00000020);
              showInfoListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getShowInfoListFieldBuilder() : null;
            } else {
              showInfoListBuilder_.addAllMessages(other.showInfoList_);
            }
          }
        }
        if (other.getGameType() != 0) {
          setGameType(other.getGameType());
        }
        if (other.hasPhase()) {
          mergePhase(other.getPhase());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int serverSeq_ ;
      /**
       * <code>uint32 server_seq = 3;</code>
       * @return The serverSeq.
       */
      @java.lang.Override
      public int getServerSeq() {
        return serverSeq_;
      }
      /**
       * <code>uint32 server_seq = 3;</code>
       * @param value The serverSeq to set.
       * @return This builder for chaining.
       */
      public Builder setServerSeq(int value) {
        
        serverSeq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 server_seq = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearServerSeq() {
        
        serverSeq_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField> fieldList_ =
        java.util.Collections.emptyList();
      private void ensureFieldListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          fieldList_ = new java.util.ArrayList<emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField>(fieldList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField, emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField.Builder, emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerFieldOrBuilder> fieldListBuilder_;

      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField> getFieldListList() {
        if (fieldListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldList_);
        } else {
          return fieldListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public int getFieldListCount() {
        if (fieldListBuilder_ == null) {
          return fieldList_.size();
        } else {
          return fieldListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField getFieldList(int index) {
        if (fieldListBuilder_ == null) {
          return fieldList_.get(index);
        } else {
          return fieldListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public Builder setFieldList(
          int index, emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField value) {
        if (fieldListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldListIsMutable();
          fieldList_.set(index, value);
          onChanged();
        } else {
          fieldListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public Builder setFieldList(
          int index, emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField.Builder builderForValue) {
        if (fieldListBuilder_ == null) {
          ensureFieldListIsMutable();
          fieldList_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public Builder addFieldList(emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField value) {
        if (fieldListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldListIsMutable();
          fieldList_.add(value);
          onChanged();
        } else {
          fieldListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public Builder addFieldList(
          int index, emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField value) {
        if (fieldListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldListIsMutable();
          fieldList_.add(index, value);
          onChanged();
        } else {
          fieldListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public Builder addFieldList(
          emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField.Builder builderForValue) {
        if (fieldListBuilder_ == null) {
          ensureFieldListIsMutable();
          fieldList_.add(builderForValue.build());
          onChanged();
        } else {
          fieldListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public Builder addFieldList(
          int index, emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField.Builder builderForValue) {
        if (fieldListBuilder_ == null) {
          ensureFieldListIsMutable();
          fieldList_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public Builder addAllFieldList(
          java.lang.Iterable<? extends emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField> values) {
        if (fieldListBuilder_ == null) {
          ensureFieldListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fieldList_);
          onChanged();
        } else {
          fieldListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public Builder clearFieldList() {
        if (fieldListBuilder_ == null) {
          fieldList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fieldListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public Builder removeFieldList(int index) {
        if (fieldListBuilder_ == null) {
          ensureFieldListIsMutable();
          fieldList_.remove(index);
          onChanged();
        } else {
          fieldListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField.Builder getFieldListBuilder(
          int index) {
        return getFieldListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerFieldOrBuilder getFieldListOrBuilder(
          int index) {
        if (fieldListBuilder_ == null) {
          return fieldList_.get(index);  } else {
          return fieldListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public java.util.List<? extends emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerFieldOrBuilder> 
           getFieldListOrBuilderList() {
        if (fieldListBuilder_ != null) {
          return fieldListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldList_);
        }
      }
      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField.Builder addFieldListBuilder() {
        return getFieldListFieldBuilder().addBuilder(
            emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField.getDefaultInstance());
      }
      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField.Builder addFieldListBuilder(
          int index) {
        return getFieldListFieldBuilder().addBuilder(
            index, emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField.getDefaultInstance());
      }
      /**
       * <code>repeated .GCGPlayerField field_list = 7;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField.Builder> 
           getFieldListBuilderList() {
        return getFieldListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField, emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField.Builder, emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerFieldOrBuilder> 
          getFieldListFieldBuilder() {
        if (fieldListBuilder_ == null) {
          fieldListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField, emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerField.Builder, emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.GCGPlayerFieldOrBuilder>(
                  fieldList_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          fieldList_ = null;
        }
        return fieldListBuilder_;
      }

      private int businessType_ = 0;
      /**
       * <code>.GCGGameBusinessType business_type = 14;</code>
       * @return The enum numeric value on the wire for businessType.
       */
      @java.lang.Override public int getBusinessTypeValue() {
        return businessType_;
      }
      /**
       * <code>.GCGGameBusinessType business_type = 14;</code>
       * @param value The enum numeric value on the wire for businessType to set.
       * @return This builder for chaining.
       */
      public Builder setBusinessTypeValue(int value) {
        
        businessType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.GCGGameBusinessType business_type = 14;</code>
       * @return The businessType.
       */
      @java.lang.Override
      public emu.grasscutter.net.proto.GCGGameBusinessTypeOuterClass.GCGGameBusinessType getBusinessType() {
        @SuppressWarnings("deprecation")
        emu.grasscutter.net.proto.GCGGameBusinessTypeOuterClass.GCGGameBusinessType result = emu.grasscutter.net.proto.GCGGameBusinessTypeOuterClass.GCGGameBusinessType.valueOf(businessType_);
        return result == null ? emu.grasscutter.net.proto.GCGGameBusinessTypeOuterClass.GCGGameBusinessType.UNRECOGNIZED : result;
      }
      /**
       * <code>.GCGGameBusinessType business_type = 14;</code>
       * @param value The businessType to set.
       * @return This builder for chaining.
       */
      public Builder setBusinessType(emu.grasscutter.net.proto.GCGGameBusinessTypeOuterClass.GCGGameBusinessType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        businessType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.GCGGameBusinessType business_type = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearBusinessType() {
        
        businessType_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge> challengeList_ =
        java.util.Collections.emptyList();
      private void ensureChallengeListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          challengeList_ = new java.util.ArrayList<emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge>(challengeList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge, emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge.Builder, emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallengeOrBuilder> challengeListBuilder_;

      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge> getChallengeListList() {
        if (challengeListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(challengeList_);
        } else {
          return challengeListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public int getChallengeListCount() {
        if (challengeListBuilder_ == null) {
          return challengeList_.size();
        } else {
          return challengeListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge getChallengeList(int index) {
        if (challengeListBuilder_ == null) {
          return challengeList_.get(index);
        } else {
          return challengeListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public Builder setChallengeList(
          int index, emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge value) {
        if (challengeListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChallengeListIsMutable();
          challengeList_.set(index, value);
          onChanged();
        } else {
          challengeListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public Builder setChallengeList(
          int index, emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge.Builder builderForValue) {
        if (challengeListBuilder_ == null) {
          ensureChallengeListIsMutable();
          challengeList_.set(index, builderForValue.build());
          onChanged();
        } else {
          challengeListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public Builder addChallengeList(emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge value) {
        if (challengeListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChallengeListIsMutable();
          challengeList_.add(value);
          onChanged();
        } else {
          challengeListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public Builder addChallengeList(
          int index, emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge value) {
        if (challengeListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChallengeListIsMutable();
          challengeList_.add(index, value);
          onChanged();
        } else {
          challengeListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public Builder addChallengeList(
          emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge.Builder builderForValue) {
        if (challengeListBuilder_ == null) {
          ensureChallengeListIsMutable();
          challengeList_.add(builderForValue.build());
          onChanged();
        } else {
          challengeListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public Builder addChallengeList(
          int index, emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge.Builder builderForValue) {
        if (challengeListBuilder_ == null) {
          ensureChallengeListIsMutable();
          challengeList_.add(index, builderForValue.build());
          onChanged();
        } else {
          challengeListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public Builder addAllChallengeList(
          java.lang.Iterable<? extends emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge> values) {
        if (challengeListBuilder_ == null) {
          ensureChallengeListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, challengeList_);
          onChanged();
        } else {
          challengeListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public Builder clearChallengeList() {
        if (challengeListBuilder_ == null) {
          challengeList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          challengeListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public Builder removeChallengeList(int index) {
        if (challengeListBuilder_ == null) {
          ensureChallengeListIsMutable();
          challengeList_.remove(index);
          onChanged();
        } else {
          challengeListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge.Builder getChallengeListBuilder(
          int index) {
        return getChallengeListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallengeOrBuilder getChallengeListOrBuilder(
          int index) {
        if (challengeListBuilder_ == null) {
          return challengeList_.get(index);  } else {
          return challengeListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public java.util.List<? extends emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallengeOrBuilder> 
           getChallengeListOrBuilderList() {
        if (challengeListBuilder_ != null) {
          return challengeListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(challengeList_);
        }
      }
      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge.Builder addChallengeListBuilder() {
        return getChallengeListFieldBuilder().addBuilder(
            emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge.getDefaultInstance());
      }
      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge.Builder addChallengeListBuilder(
          int index) {
        return getChallengeListFieldBuilder().addBuilder(
            index, emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge.getDefaultInstance());
      }
      /**
       * <code>repeated .GCGDuelChallenge challenge_list = 5;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge.Builder> 
           getChallengeListBuilderList() {
        return getChallengeListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge, emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge.Builder, emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallengeOrBuilder> 
          getChallengeListFieldBuilder() {
        if (challengeListBuilder_ == null) {
          challengeListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge, emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallenge.Builder, emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.GCGDuelChallengeOrBuilder>(
                  challengeList_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          challengeList_ = null;
        }
        return challengeListBuilder_;
      }

      private int gameId_ ;
      /**
       * <code>uint32 game_id = 11;</code>
       * @return The gameId.
       */
      @java.lang.Override
      public int getGameId() {
        return gameId_;
      }
      /**
       * <code>uint32 game_id = 11;</code>
       * @param value The gameId to set.
       * @return This builder for chaining.
       */
      public Builder setGameId(int value) {
        
        gameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 game_id = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearGameId() {
        
        gameId_ = 0;
        onChanged();
        return this;
      }

      private int controllerId_ ;
      /**
       * <code>uint32 controller_id = 13;</code>
       * @return The controllerId.
       */
      @java.lang.Override
      public int getControllerId() {
        return controllerId_;
      }
      /**
       * <code>uint32 controller_id = 13;</code>
       * @param value The controllerId to set.
       * @return This builder for chaining.
       */
      public Builder setControllerId(int value) {
        
        controllerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 controller_id = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearControllerId() {
        
        controllerId_ = 0;
        onChanged();
        return this;
      }

      private int round_ ;
      /**
       * <code>uint32 round = 15;</code>
       * @return The round.
       */
      @java.lang.Override
      public int getRound() {
        return round_;
      }
      /**
       * <code>uint32 round = 15;</code>
       * @param value The round to set.
       * @return This builder for chaining.
       */
      public Builder setRound(int value) {
        
        round_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 round = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearRound() {
        
        round_ = 0;
        onChanged();
        return this;
      }

      private int curControllerId_ ;
      /**
       * <code>uint32 cur_controller_id = 12;</code>
       * @return The curControllerId.
       */
      @java.lang.Override
      public int getCurControllerId() {
        return curControllerId_;
      }
      /**
       * <code>uint32 cur_controller_id = 12;</code>
       * @param value The curControllerId to set.
       * @return This builder for chaining.
       */
      public Builder setCurControllerId(int value) {
        
        curControllerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 cur_controller_id = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurControllerId() {
        
        curControllerId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention> intentionList_ =
        java.util.Collections.emptyList();
      private void ensureIntentionListIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          intentionList_ = new java.util.ArrayList<emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention>(intentionList_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention, emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention.Builder, emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntentionOrBuilder> intentionListBuilder_;

      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention> getIntentionListList() {
        if (intentionListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(intentionList_);
        } else {
          return intentionListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public int getIntentionListCount() {
        if (intentionListBuilder_ == null) {
          return intentionList_.size();
        } else {
          return intentionListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention getIntentionList(int index) {
        if (intentionListBuilder_ == null) {
          return intentionList_.get(index);
        } else {
          return intentionListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public Builder setIntentionList(
          int index, emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention value) {
        if (intentionListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIntentionListIsMutable();
          intentionList_.set(index, value);
          onChanged();
        } else {
          intentionListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public Builder setIntentionList(
          int index, emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention.Builder builderForValue) {
        if (intentionListBuilder_ == null) {
          ensureIntentionListIsMutable();
          intentionList_.set(index, builderForValue.build());
          onChanged();
        } else {
          intentionListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public Builder addIntentionList(emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention value) {
        if (intentionListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIntentionListIsMutable();
          intentionList_.add(value);
          onChanged();
        } else {
          intentionListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public Builder addIntentionList(
          int index, emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention value) {
        if (intentionListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIntentionListIsMutable();
          intentionList_.add(index, value);
          onChanged();
        } else {
          intentionListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public Builder addIntentionList(
          emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention.Builder builderForValue) {
        if (intentionListBuilder_ == null) {
          ensureIntentionListIsMutable();
          intentionList_.add(builderForValue.build());
          onChanged();
        } else {
          intentionListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public Builder addIntentionList(
          int index, emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention.Builder builderForValue) {
        if (intentionListBuilder_ == null) {
          ensureIntentionListIsMutable();
          intentionList_.add(index, builderForValue.build());
          onChanged();
        } else {
          intentionListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public Builder addAllIntentionList(
          java.lang.Iterable<? extends emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention> values) {
        if (intentionListBuilder_ == null) {
          ensureIntentionListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, intentionList_);
          onChanged();
        } else {
          intentionListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public Builder clearIntentionList() {
        if (intentionListBuilder_ == null) {
          intentionList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          intentionListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public Builder removeIntentionList(int index) {
        if (intentionListBuilder_ == null) {
          ensureIntentionListIsMutable();
          intentionList_.remove(index);
          onChanged();
        } else {
          intentionListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention.Builder getIntentionListBuilder(
          int index) {
        return getIntentionListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntentionOrBuilder getIntentionListOrBuilder(
          int index) {
        if (intentionListBuilder_ == null) {
          return intentionList_.get(index);  } else {
          return intentionListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public java.util.List<? extends emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntentionOrBuilder> 
           getIntentionListOrBuilderList() {
        if (intentionListBuilder_ != null) {
          return intentionListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(intentionList_);
        }
      }
      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention.Builder addIntentionListBuilder() {
        return getIntentionListFieldBuilder().addBuilder(
            emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention.getDefaultInstance());
      }
      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention.Builder addIntentionListBuilder(
          int index) {
        return getIntentionListFieldBuilder().addBuilder(
            index, emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention.getDefaultInstance());
      }
      /**
       * <code>repeated .GCGPVEIntention intention_list = 1;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention.Builder> 
           getIntentionListBuilderList() {
        return getIntentionListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention, emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention.Builder, emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntentionOrBuilder> 
          getIntentionListFieldBuilder() {
        if (intentionListBuilder_ == null) {
          intentionListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention, emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntention.Builder, emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.GCGPVEIntentionOrBuilder>(
                  intentionList_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          intentionList_ = null;
        }
        return intentionListBuilder_;
      }

      private emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo costRevise_;
      private com.google.protobuf.SingleFieldBuilderV3<
          emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo, emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo.Builder, emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfoOrBuilder> costReviseBuilder_;
      /**
       * <code>.GCGCostReviseInfo cost_revise = 10;</code>
       * @return Whether the costRevise field is set.
       */
      public boolean hasCostRevise() {
        return costReviseBuilder_ != null || costRevise_ != null;
      }
      /**
       * <code>.GCGCostReviseInfo cost_revise = 10;</code>
       * @return The costRevise.
       */
      public emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo getCostRevise() {
        if (costReviseBuilder_ == null) {
          return costRevise_ == null ? emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo.getDefaultInstance() : costRevise_;
        } else {
          return costReviseBuilder_.getMessage();
        }
      }
      /**
       * <code>.GCGCostReviseInfo cost_revise = 10;</code>
       */
      public Builder setCostRevise(emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo value) {
        if (costReviseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          costRevise_ = value;
          onChanged();
        } else {
          costReviseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.GCGCostReviseInfo cost_revise = 10;</code>
       */
      public Builder setCostRevise(
          emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo.Builder builderForValue) {
        if (costReviseBuilder_ == null) {
          costRevise_ = builderForValue.build();
          onChanged();
        } else {
          costReviseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.GCGCostReviseInfo cost_revise = 10;</code>
       */
      public Builder mergeCostRevise(emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo value) {
        if (costReviseBuilder_ == null) {
          if (costRevise_ != null) {
            costRevise_ =
              emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo.newBuilder(costRevise_).mergeFrom(value).buildPartial();
          } else {
            costRevise_ = value;
          }
          onChanged();
        } else {
          costReviseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.GCGCostReviseInfo cost_revise = 10;</code>
       */
      public Builder clearCostRevise() {
        if (costReviseBuilder_ == null) {
          costRevise_ = null;
          onChanged();
        } else {
          costRevise_ = null;
          costReviseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.GCGCostReviseInfo cost_revise = 10;</code>
       */
      public emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo.Builder getCostReviseBuilder() {
        
        onChanged();
        return getCostReviseFieldBuilder().getBuilder();
      }
      /**
       * <code>.GCGCostReviseInfo cost_revise = 10;</code>
       */
      public emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfoOrBuilder getCostReviseOrBuilder() {
        if (costReviseBuilder_ != null) {
          return costReviseBuilder_.getMessageOrBuilder();
        } else {
          return costRevise_ == null ?
              emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo.getDefaultInstance() : costRevise_;
        }
      }
      /**
       * <code>.GCGCostReviseInfo cost_revise = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo, emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo.Builder, emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfoOrBuilder> 
          getCostReviseFieldBuilder() {
        if (costReviseBuilder_ == null) {
          costReviseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo, emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfo.Builder, emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.GCGCostReviseInfoOrBuilder>(
                  getCostRevise(),
                  getParentForChildren(),
                  isClean());
          costRevise_ = null;
        }
        return costReviseBuilder_;
      }

      private com.google.protobuf.Internal.IntList cardIdList_ = emptyIntList();
      private void ensureCardIdListIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          cardIdList_ = mutableCopy(cardIdList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated uint32 card_id_list = 4;</code>
       * @return A list containing the cardIdList.
       */
      public java.util.List<java.lang.Integer>
          getCardIdListList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(cardIdList_) : cardIdList_;
      }
      /**
       * <code>repeated uint32 card_id_list = 4;</code>
       * @return The count of cardIdList.
       */
      public int getCardIdListCount() {
        return cardIdList_.size();
      }
      /**
       * <code>repeated uint32 card_id_list = 4;</code>
       * @param index The index of the element to return.
       * @return The cardIdList at the given index.
       */
      public int getCardIdList(int index) {
        return cardIdList_.getInt(index);
      }
      /**
       * <code>repeated uint32 card_id_list = 4;</code>
       * @param index The index to set the value at.
       * @param value The cardIdList to set.
       * @return This builder for chaining.
       */
      public Builder setCardIdList(
          int index, int value) {
        ensureCardIdListIsMutable();
        cardIdList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 card_id_list = 4;</code>
       * @param value The cardIdList to add.
       * @return This builder for chaining.
       */
      public Builder addCardIdList(int value) {
        ensureCardIdListIsMutable();
        cardIdList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 card_id_list = 4;</code>
       * @param values The cardIdList to add.
       * @return This builder for chaining.
       */
      public Builder addAllCardIdList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardIdListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cardIdList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 card_id_list = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCardIdList() {
        cardIdList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard> cardList_ =
        java.util.Collections.emptyList();
      private void ensureCardListIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          cardList_ = new java.util.ArrayList<emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard>(cardList_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard, emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard.Builder, emu.grasscutter.net.proto.GCGCardOuterClass.GCGCardOrBuilder> cardListBuilder_;

      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard> getCardListList() {
        if (cardListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardList_);
        } else {
          return cardListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public int getCardListCount() {
        if (cardListBuilder_ == null) {
          return cardList_.size();
        } else {
          return cardListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard getCardList(int index) {
        if (cardListBuilder_ == null) {
          return cardList_.get(index);
        } else {
          return cardListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public Builder setCardList(
          int index, emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard value) {
        if (cardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardListIsMutable();
          cardList_.set(index, value);
          onChanged();
        } else {
          cardListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public Builder setCardList(
          int index, emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard.Builder builderForValue) {
        if (cardListBuilder_ == null) {
          ensureCardListIsMutable();
          cardList_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public Builder addCardList(emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard value) {
        if (cardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardListIsMutable();
          cardList_.add(value);
          onChanged();
        } else {
          cardListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public Builder addCardList(
          int index, emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard value) {
        if (cardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardListIsMutable();
          cardList_.add(index, value);
          onChanged();
        } else {
          cardListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public Builder addCardList(
          emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard.Builder builderForValue) {
        if (cardListBuilder_ == null) {
          ensureCardListIsMutable();
          cardList_.add(builderForValue.build());
          onChanged();
        } else {
          cardListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public Builder addCardList(
          int index, emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard.Builder builderForValue) {
        if (cardListBuilder_ == null) {
          ensureCardListIsMutable();
          cardList_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public Builder addAllCardList(
          java.lang.Iterable<? extends emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard> values) {
        if (cardListBuilder_ == null) {
          ensureCardListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cardList_);
          onChanged();
        } else {
          cardListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public Builder clearCardList() {
        if (cardListBuilder_ == null) {
          cardList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          cardListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public Builder removeCardList(int index) {
        if (cardListBuilder_ == null) {
          ensureCardListIsMutable();
          cardList_.remove(index);
          onChanged();
        } else {
          cardListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard.Builder getCardListBuilder(
          int index) {
        return getCardListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public emu.grasscutter.net.proto.GCGCardOuterClass.GCGCardOrBuilder getCardListOrBuilder(
          int index) {
        if (cardListBuilder_ == null) {
          return cardList_.get(index);  } else {
          return cardListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public java.util.List<? extends emu.grasscutter.net.proto.GCGCardOuterClass.GCGCardOrBuilder> 
           getCardListOrBuilderList() {
        if (cardListBuilder_ != null) {
          return cardListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardList_);
        }
      }
      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard.Builder addCardListBuilder() {
        return getCardListFieldBuilder().addBuilder(
            emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard.getDefaultInstance());
      }
      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard.Builder addCardListBuilder(
          int index) {
        return getCardListFieldBuilder().addBuilder(
            index, emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard.getDefaultInstance());
      }
      /**
       * <code>repeated .GCGCard card_list = 9;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard.Builder> 
           getCardListBuilderList() {
        return getCardListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard, emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard.Builder, emu.grasscutter.net.proto.GCGCardOuterClass.GCGCardOrBuilder> 
          getCardListFieldBuilder() {
        if (cardListBuilder_ == null) {
          cardListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard, emu.grasscutter.net.proto.GCGCardOuterClass.GCGCard.Builder, emu.grasscutter.net.proto.GCGCardOuterClass.GCGCardOrBuilder>(
                  cardList_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          cardList_ = null;
        }
        return cardListBuilder_;
      }

      private java.util.List<emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo> showInfoList_ =
        java.util.Collections.emptyList();
      private void ensureShowInfoListIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          showInfoList_ = new java.util.ArrayList<emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo>(showInfoList_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo, emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo.Builder, emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfoOrBuilder> showInfoListBuilder_;

      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo> getShowInfoListList() {
        if (showInfoListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(showInfoList_);
        } else {
          return showInfoListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public int getShowInfoListCount() {
        if (showInfoListBuilder_ == null) {
          return showInfoList_.size();
        } else {
          return showInfoListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo getShowInfoList(int index) {
        if (showInfoListBuilder_ == null) {
          return showInfoList_.get(index);
        } else {
          return showInfoListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public Builder setShowInfoList(
          int index, emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo value) {
        if (showInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShowInfoListIsMutable();
          showInfoList_.set(index, value);
          onChanged();
        } else {
          showInfoListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public Builder setShowInfoList(
          int index, emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo.Builder builderForValue) {
        if (showInfoListBuilder_ == null) {
          ensureShowInfoListIsMutable();
          showInfoList_.set(index, builderForValue.build());
          onChanged();
        } else {
          showInfoListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public Builder addShowInfoList(emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo value) {
        if (showInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShowInfoListIsMutable();
          showInfoList_.add(value);
          onChanged();
        } else {
          showInfoListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public Builder addShowInfoList(
          int index, emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo value) {
        if (showInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShowInfoListIsMutable();
          showInfoList_.add(index, value);
          onChanged();
        } else {
          showInfoListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public Builder addShowInfoList(
          emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo.Builder builderForValue) {
        if (showInfoListBuilder_ == null) {
          ensureShowInfoListIsMutable();
          showInfoList_.add(builderForValue.build());
          onChanged();
        } else {
          showInfoListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public Builder addShowInfoList(
          int index, emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo.Builder builderForValue) {
        if (showInfoListBuilder_ == null) {
          ensureShowInfoListIsMutable();
          showInfoList_.add(index, builderForValue.build());
          onChanged();
        } else {
          showInfoListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public Builder addAllShowInfoList(
          java.lang.Iterable<? extends emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo> values) {
        if (showInfoListBuilder_ == null) {
          ensureShowInfoListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, showInfoList_);
          onChanged();
        } else {
          showInfoListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public Builder clearShowInfoList() {
        if (showInfoListBuilder_ == null) {
          showInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          showInfoListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public Builder removeShowInfoList(int index) {
        if (showInfoListBuilder_ == null) {
          ensureShowInfoListIsMutable();
          showInfoList_.remove(index);
          onChanged();
        } else {
          showInfoListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo.Builder getShowInfoListBuilder(
          int index) {
        return getShowInfoListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfoOrBuilder getShowInfoListOrBuilder(
          int index) {
        if (showInfoListBuilder_ == null) {
          return showInfoList_.get(index);  } else {
          return showInfoListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public java.util.List<? extends emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfoOrBuilder> 
           getShowInfoListOrBuilderList() {
        if (showInfoListBuilder_ != null) {
          return showInfoListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(showInfoList_);
        }
      }
      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo.Builder addShowInfoListBuilder() {
        return getShowInfoListFieldBuilder().addBuilder(
            emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo.Builder addShowInfoListBuilder(
          int index) {
        return getShowInfoListFieldBuilder().addBuilder(
            index, emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .GCGControllerShowInfo show_info_list = 6;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo.Builder> 
           getShowInfoListBuilderList() {
        return getShowInfoListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo, emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo.Builder, emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfoOrBuilder> 
          getShowInfoListFieldBuilder() {
        if (showInfoListBuilder_ == null) {
          showInfoListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo, emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfo.Builder, emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.GCGControllerShowInfoOrBuilder>(
                  showInfoList_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          showInfoList_ = null;
        }
        return showInfoListBuilder_;
      }

      private int gameType_ ;
      /**
       * <code>uint32 game_type = 2;</code>
       * @return The gameType.
       */
      @java.lang.Override
      public int getGameType() {
        return gameType_;
      }
      /**
       * <code>uint32 game_type = 2;</code>
       * @param value The gameType to set.
       * @return This builder for chaining.
       */
      public Builder setGameType(int value) {
        
        gameType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 game_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearGameType() {
        
        gameType_ = 0;
        onChanged();
        return this;
      }

      private emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase phase_;
      private com.google.protobuf.SingleFieldBuilderV3<
          emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase, emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase.Builder, emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhaseOrBuilder> phaseBuilder_;
      /**
       * <code>.GCGPhase phase = 8;</code>
       * @return Whether the phase field is set.
       */
      public boolean hasPhase() {
        return phaseBuilder_ != null || phase_ != null;
      }
      /**
       * <code>.GCGPhase phase = 8;</code>
       * @return The phase.
       */
      public emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase getPhase() {
        if (phaseBuilder_ == null) {
          return phase_ == null ? emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase.getDefaultInstance() : phase_;
        } else {
          return phaseBuilder_.getMessage();
        }
      }
      /**
       * <code>.GCGPhase phase = 8;</code>
       */
      public Builder setPhase(emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase value) {
        if (phaseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          phase_ = value;
          onChanged();
        } else {
          phaseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.GCGPhase phase = 8;</code>
       */
      public Builder setPhase(
          emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase.Builder builderForValue) {
        if (phaseBuilder_ == null) {
          phase_ = builderForValue.build();
          onChanged();
        } else {
          phaseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.GCGPhase phase = 8;</code>
       */
      public Builder mergePhase(emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase value) {
        if (phaseBuilder_ == null) {
          if (phase_ != null) {
            phase_ =
              emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase.newBuilder(phase_).mergeFrom(value).buildPartial();
          } else {
            phase_ = value;
          }
          onChanged();
        } else {
          phaseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.GCGPhase phase = 8;</code>
       */
      public Builder clearPhase() {
        if (phaseBuilder_ == null) {
          phase_ = null;
          onChanged();
        } else {
          phase_ = null;
          phaseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.GCGPhase phase = 8;</code>
       */
      public emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase.Builder getPhaseBuilder() {
        
        onChanged();
        return getPhaseFieldBuilder().getBuilder();
      }
      /**
       * <code>.GCGPhase phase = 8;</code>
       */
      public emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhaseOrBuilder getPhaseOrBuilder() {
        if (phaseBuilder_ != null) {
          return phaseBuilder_.getMessageOrBuilder();
        } else {
          return phase_ == null ?
              emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase.getDefaultInstance() : phase_;
        }
      }
      /**
       * <code>.GCGPhase phase = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase, emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase.Builder, emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhaseOrBuilder> 
          getPhaseFieldBuilder() {
        if (phaseBuilder_ == null) {
          phaseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase, emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhase.Builder, emu.grasscutter.net.proto.GCGPhaseOuterClass.GCGPhaseOrBuilder>(
                  getPhase(),
                  getParentForChildren(),
                  isClean());
          phase_ = null;
        }
        return phaseBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GCGDuel)
    }

    // @@protoc_insertion_point(class_scope:GCGDuel)
    private static final emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel();
    }

    public static emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GCGDuel>
        PARSER = new com.google.protobuf.AbstractParser<GCGDuel>() {
      @java.lang.Override
      public GCGDuel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GCGDuel(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GCGDuel> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GCGDuel> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.grasscutter.net.proto.GCGDuelOuterClass.GCGDuel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GCGDuel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GCGDuel_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rGCGDuel.proto\032\rGCGCard.proto\032\033GCGContr" +
      "ollerShowInfo.proto\032\027GCGCostReviseInfo.p" +
      "roto\032\026GCGDuelChallenge.proto\032\031GCGGameBus" +
      "inessType.proto\032\025GCGPVEIntention.proto\032\016" +
      "GCGPhase.proto\032\024GCGPlayerField.proto\"\317\003\n" +
      "\007GCGDuel\022\022\n\nserver_seq\030\003 \001(\r\022#\n\nfield_li" +
      "st\030\007 \003(\0132\017.GCGPlayerField\022+\n\rbusiness_ty" +
      "pe\030\016 \001(\0162\024.GCGGameBusinessType\022)\n\016challe" +
      "nge_list\030\005 \003(\0132\021.GCGDuelChallenge\022\017\n\007gam" +
      "e_id\030\013 \001(\r\022\025\n\rcontroller_id\030\r \001(\r\022\r\n\005rou" +
      "nd\030\017 \001(\r\022\031\n\021cur_controller_id\030\014 \001(\r\022(\n\016i" +
      "ntention_list\030\001 \003(\0132\020.GCGPVEIntention\022\'\n" +
      "\013cost_revise\030\n \001(\0132\022.GCGCostReviseInfo\022\024" +
      "\n\014card_id_list\030\004 \003(\r\022\033\n\tcard_list\030\t \003(\0132" +
      "\010.GCGCard\022.\n\016show_info_list\030\006 \003(\0132\026.GCGC" +
      "ontrollerShowInfo\022\021\n\tgame_type\030\002 \001(\r\022\030\n\005" +
      "phase\030\010 \001(\0132\t.GCGPhaseB\033\n\031emu.grasscutte" +
      "r.net.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          emu.grasscutter.net.proto.GCGCardOuterClass.getDescriptor(),
          emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.getDescriptor(),
          emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.getDescriptor(),
          emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.getDescriptor(),
          emu.grasscutter.net.proto.GCGGameBusinessTypeOuterClass.getDescriptor(),
          emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.getDescriptor(),
          emu.grasscutter.net.proto.GCGPhaseOuterClass.getDescriptor(),
          emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.getDescriptor(),
        });
    internal_static_GCGDuel_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_GCGDuel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GCGDuel_descriptor,
        new java.lang.String[] { "ServerSeq", "FieldList", "BusinessType", "ChallengeList", "GameId", "ControllerId", "Round", "CurControllerId", "IntentionList", "CostRevise", "CardIdList", "CardList", "ShowInfoList", "GameType", "Phase", });
    emu.grasscutter.net.proto.GCGCardOuterClass.getDescriptor();
    emu.grasscutter.net.proto.GCGControllerShowInfoOuterClass.getDescriptor();
    emu.grasscutter.net.proto.GCGCostReviseInfoOuterClass.getDescriptor();
    emu.grasscutter.net.proto.GCGDuelChallengeOuterClass.getDescriptor();
    emu.grasscutter.net.proto.GCGGameBusinessTypeOuterClass.getDescriptor();
    emu.grasscutter.net.proto.GCGPVEIntentionOuterClass.getDescriptor();
    emu.grasscutter.net.proto.GCGPhaseOuterClass.getDescriptor();
    emu.grasscutter.net.proto.GCGPlayerFieldOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
