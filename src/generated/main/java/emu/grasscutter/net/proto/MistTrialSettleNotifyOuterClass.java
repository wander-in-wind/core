// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MistTrialSettleNotify.proto

package emu.grasscutter.net.proto;

public final class MistTrialSettleNotifyOuterClass {
  private MistTrialSettleNotifyOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MistTrialSettleNotifyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MistTrialSettleNotify)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_record_map = 15;</code>
     */
    int getExhibitionListDataRecordMapCount();
    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_record_map = 15;</code>
     */
    boolean containsExhibitionListDataRecordMap(
        int key);
    /**
     * Use {@link #getExhibitionListDataRecordMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getExhibitionListDataRecordMap();
    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_record_map = 15;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getExhibitionListDataRecordMapMap();
    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_record_map = 15;</code>
     */

    int getExhibitionListDataRecordMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_record_map = 15;</code>
     */

    int getExhibitionListDataRecordMapOrThrow(
        int key);

    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_result_map = 14;</code>
     */
    int getExhibitionListDataResultMapCount();
    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_result_map = 14;</code>
     */
    boolean containsExhibitionListDataResultMap(
        int key);
    /**
     * Use {@link #getExhibitionListDataResultMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getExhibitionListDataResultMap();
    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_result_map = 14;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getExhibitionListDataResultMapMap();
    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_result_map = 14;</code>
     */

    int getExhibitionListDataResultMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_result_map = 14;</code>
     */

    int getExhibitionListDataResultMapOrThrow(
        int key);

    /**
     * <code>uint32 dungeon_scene_id = 5;</code>
     * @return The dungeonSceneId.
     */
    int getDungeonSceneId();
  }
  /**
   * <pre>
   * CmdId: 8373
   * EnetChannelId: 0
   * EnetIsReliable: true
   * IsAllowClient: true
   * </pre>
   *
   * Protobuf type {@code MistTrialSettleNotify}
   */
  public static final class MistTrialSettleNotify extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MistTrialSettleNotify)
      MistTrialSettleNotifyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MistTrialSettleNotify.newBuilder() to construct.
    private MistTrialSettleNotify(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MistTrialSettleNotify() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MistTrialSettleNotify();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MistTrialSettleNotify(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 40: {

              dungeonSceneId_ = input.readUInt32();
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                exhibitionListDataResultMap_ = com.google.protobuf.MapField.newMapField(
                    ExhibitionListDataResultMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              exhibitionListDataResultMap__ = input.readMessage(
                  ExhibitionListDataResultMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              exhibitionListDataResultMap_.getMutableMap().put(
                  exhibitionListDataResultMap__.getKey(), exhibitionListDataResultMap__.getValue());
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                exhibitionListDataRecordMap_ = com.google.protobuf.MapField.newMapField(
                    ExhibitionListDataRecordMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              exhibitionListDataRecordMap__ = input.readMessage(
                  ExhibitionListDataRecordMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              exhibitionListDataRecordMap_.getMutableMap().put(
                  exhibitionListDataRecordMap__.getKey(), exhibitionListDataRecordMap__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.internal_static_MistTrialSettleNotify_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 15:
          return internalGetExhibitionListDataRecordMap();
        case 14:
          return internalGetExhibitionListDataResultMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.internal_static_MistTrialSettleNotify_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify.class, emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify.Builder.class);
    }

    public static final int EXHIBITION_LIST_DATA_RECORD_MAP_FIELD_NUMBER = 15;
    private static final class ExhibitionListDataRecordMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.internal_static_MistTrialSettleNotify_ExhibitionListDataRecordMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> exhibitionListDataRecordMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetExhibitionListDataRecordMap() {
      if (exhibitionListDataRecordMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ExhibitionListDataRecordMapDefaultEntryHolder.defaultEntry);
      }
      return exhibitionListDataRecordMap_;
    }

    public int getExhibitionListDataRecordMapCount() {
      return internalGetExhibitionListDataRecordMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_record_map = 15;</code>
     */

    @java.lang.Override
    public boolean containsExhibitionListDataRecordMap(
        int key) {
      
      return internalGetExhibitionListDataRecordMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getExhibitionListDataRecordMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getExhibitionListDataRecordMap() {
      return getExhibitionListDataRecordMapMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_record_map = 15;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getExhibitionListDataRecordMapMap() {
      return internalGetExhibitionListDataRecordMap().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_record_map = 15;</code>
     */
    @java.lang.Override

    public int getExhibitionListDataRecordMapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetExhibitionListDataRecordMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_record_map = 15;</code>
     */
    @java.lang.Override

    public int getExhibitionListDataRecordMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetExhibitionListDataRecordMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int EXHIBITION_LIST_DATA_RESULT_MAP_FIELD_NUMBER = 14;
    private static final class ExhibitionListDataResultMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.internal_static_MistTrialSettleNotify_ExhibitionListDataResultMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> exhibitionListDataResultMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetExhibitionListDataResultMap() {
      if (exhibitionListDataResultMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ExhibitionListDataResultMapDefaultEntryHolder.defaultEntry);
      }
      return exhibitionListDataResultMap_;
    }

    public int getExhibitionListDataResultMapCount() {
      return internalGetExhibitionListDataResultMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_result_map = 14;</code>
     */

    @java.lang.Override
    public boolean containsExhibitionListDataResultMap(
        int key) {
      
      return internalGetExhibitionListDataResultMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getExhibitionListDataResultMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getExhibitionListDataResultMap() {
      return getExhibitionListDataResultMapMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_result_map = 14;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getExhibitionListDataResultMapMap() {
      return internalGetExhibitionListDataResultMap().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_result_map = 14;</code>
     */
    @java.lang.Override

    public int getExhibitionListDataResultMapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetExhibitionListDataResultMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; exhibition_list_data_result_map = 14;</code>
     */
    @java.lang.Override

    public int getExhibitionListDataResultMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetExhibitionListDataResultMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int DUNGEON_SCENE_ID_FIELD_NUMBER = 5;
    private int dungeonSceneId_;
    /**
     * <code>uint32 dungeon_scene_id = 5;</code>
     * @return The dungeonSceneId.
     */
    @java.lang.Override
    public int getDungeonSceneId() {
      return dungeonSceneId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (dungeonSceneId_ != 0) {
        output.writeUInt32(5, dungeonSceneId_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetExhibitionListDataResultMap(),
          ExhibitionListDataResultMapDefaultEntryHolder.defaultEntry,
          14);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetExhibitionListDataRecordMap(),
          ExhibitionListDataRecordMapDefaultEntryHolder.defaultEntry,
          15);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (dungeonSceneId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, dungeonSceneId_);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetExhibitionListDataResultMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        exhibitionListDataResultMap__ = ExhibitionListDataResultMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(14, exhibitionListDataResultMap__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetExhibitionListDataRecordMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        exhibitionListDataRecordMap__ = ExhibitionListDataRecordMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, exhibitionListDataRecordMap__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify)) {
        return super.equals(obj);
      }
      emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify other = (emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify) obj;

      if (!internalGetExhibitionListDataRecordMap().equals(
          other.internalGetExhibitionListDataRecordMap())) return false;
      if (!internalGetExhibitionListDataResultMap().equals(
          other.internalGetExhibitionListDataResultMap())) return false;
      if (getDungeonSceneId()
          != other.getDungeonSceneId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetExhibitionListDataRecordMap().getMap().isEmpty()) {
        hash = (37 * hash) + EXHIBITION_LIST_DATA_RECORD_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetExhibitionListDataRecordMap().hashCode();
      }
      if (!internalGetExhibitionListDataResultMap().getMap().isEmpty()) {
        hash = (37 * hash) + EXHIBITION_LIST_DATA_RESULT_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetExhibitionListDataResultMap().hashCode();
      }
      hash = (37 * hash) + DUNGEON_SCENE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDungeonSceneId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * CmdId: 8373
     * EnetChannelId: 0
     * EnetIsReliable: true
     * IsAllowClient: true
     * </pre>
     *
     * Protobuf type {@code MistTrialSettleNotify}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MistTrialSettleNotify)
        emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotifyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.internal_static_MistTrialSettleNotify_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 15:
            return internalGetExhibitionListDataRecordMap();
          case 14:
            return internalGetExhibitionListDataResultMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 15:
            return internalGetMutableExhibitionListDataRecordMap();
          case 14:
            return internalGetMutableExhibitionListDataResultMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.internal_static_MistTrialSettleNotify_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify.class, emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify.Builder.class);
      }

      // Construct using emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableExhibitionListDataRecordMap().clear();
        internalGetMutableExhibitionListDataResultMap().clear();
        dungeonSceneId_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.internal_static_MistTrialSettleNotify_descriptor;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify getDefaultInstanceForType() {
        return emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify.getDefaultInstance();
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify build() {
        emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify buildPartial() {
        emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify result = new emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify(this);
        int from_bitField0_ = bitField0_;
        result.exhibitionListDataRecordMap_ = internalGetExhibitionListDataRecordMap();
        result.exhibitionListDataRecordMap_.makeImmutable();
        result.exhibitionListDataResultMap_ = internalGetExhibitionListDataResultMap();
        result.exhibitionListDataResultMap_.makeImmutable();
        result.dungeonSceneId_ = dungeonSceneId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify) {
          return mergeFrom((emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify other) {
        if (other == emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify.getDefaultInstance()) return this;
        internalGetMutableExhibitionListDataRecordMap().mergeFrom(
            other.internalGetExhibitionListDataRecordMap());
        internalGetMutableExhibitionListDataResultMap().mergeFrom(
            other.internalGetExhibitionListDataResultMap());
        if (other.getDungeonSceneId() != 0) {
          setDungeonSceneId(other.getDungeonSceneId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> exhibitionListDataRecordMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetExhibitionListDataRecordMap() {
        if (exhibitionListDataRecordMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ExhibitionListDataRecordMapDefaultEntryHolder.defaultEntry);
        }
        return exhibitionListDataRecordMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableExhibitionListDataRecordMap() {
        onChanged();;
        if (exhibitionListDataRecordMap_ == null) {
          exhibitionListDataRecordMap_ = com.google.protobuf.MapField.newMapField(
              ExhibitionListDataRecordMapDefaultEntryHolder.defaultEntry);
        }
        if (!exhibitionListDataRecordMap_.isMutable()) {
          exhibitionListDataRecordMap_ = exhibitionListDataRecordMap_.copy();
        }
        return exhibitionListDataRecordMap_;
      }

      public int getExhibitionListDataRecordMapCount() {
        return internalGetExhibitionListDataRecordMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; exhibition_list_data_record_map = 15;</code>
       */

      @java.lang.Override
      public boolean containsExhibitionListDataRecordMap(
          int key) {
        
        return internalGetExhibitionListDataRecordMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getExhibitionListDataRecordMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getExhibitionListDataRecordMap() {
        return getExhibitionListDataRecordMapMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; exhibition_list_data_record_map = 15;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getExhibitionListDataRecordMapMap() {
        return internalGetExhibitionListDataRecordMap().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; exhibition_list_data_record_map = 15;</code>
       */
      @java.lang.Override

      public int getExhibitionListDataRecordMapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetExhibitionListDataRecordMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; exhibition_list_data_record_map = 15;</code>
       */
      @java.lang.Override

      public int getExhibitionListDataRecordMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetExhibitionListDataRecordMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearExhibitionListDataRecordMap() {
        internalGetMutableExhibitionListDataRecordMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; exhibition_list_data_record_map = 15;</code>
       */

      public Builder removeExhibitionListDataRecordMap(
          int key) {
        
        internalGetMutableExhibitionListDataRecordMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableExhibitionListDataRecordMap() {
        return internalGetMutableExhibitionListDataRecordMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; exhibition_list_data_record_map = 15;</code>
       */
      public Builder putExhibitionListDataRecordMap(
          int key,
          int value) {
        
        
        internalGetMutableExhibitionListDataRecordMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; exhibition_list_data_record_map = 15;</code>
       */

      public Builder putAllExhibitionListDataRecordMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableExhibitionListDataRecordMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> exhibitionListDataResultMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetExhibitionListDataResultMap() {
        if (exhibitionListDataResultMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ExhibitionListDataResultMapDefaultEntryHolder.defaultEntry);
        }
        return exhibitionListDataResultMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableExhibitionListDataResultMap() {
        onChanged();;
        if (exhibitionListDataResultMap_ == null) {
          exhibitionListDataResultMap_ = com.google.protobuf.MapField.newMapField(
              ExhibitionListDataResultMapDefaultEntryHolder.defaultEntry);
        }
        if (!exhibitionListDataResultMap_.isMutable()) {
          exhibitionListDataResultMap_ = exhibitionListDataResultMap_.copy();
        }
        return exhibitionListDataResultMap_;
      }

      public int getExhibitionListDataResultMapCount() {
        return internalGetExhibitionListDataResultMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; exhibition_list_data_result_map = 14;</code>
       */

      @java.lang.Override
      public boolean containsExhibitionListDataResultMap(
          int key) {
        
        return internalGetExhibitionListDataResultMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getExhibitionListDataResultMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getExhibitionListDataResultMap() {
        return getExhibitionListDataResultMapMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; exhibition_list_data_result_map = 14;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getExhibitionListDataResultMapMap() {
        return internalGetExhibitionListDataResultMap().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; exhibition_list_data_result_map = 14;</code>
       */
      @java.lang.Override

      public int getExhibitionListDataResultMapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetExhibitionListDataResultMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; exhibition_list_data_result_map = 14;</code>
       */
      @java.lang.Override

      public int getExhibitionListDataResultMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetExhibitionListDataResultMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearExhibitionListDataResultMap() {
        internalGetMutableExhibitionListDataResultMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; exhibition_list_data_result_map = 14;</code>
       */

      public Builder removeExhibitionListDataResultMap(
          int key) {
        
        internalGetMutableExhibitionListDataResultMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableExhibitionListDataResultMap() {
        return internalGetMutableExhibitionListDataResultMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; exhibition_list_data_result_map = 14;</code>
       */
      public Builder putExhibitionListDataResultMap(
          int key,
          int value) {
        
        
        internalGetMutableExhibitionListDataResultMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; exhibition_list_data_result_map = 14;</code>
       */

      public Builder putAllExhibitionListDataResultMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableExhibitionListDataResultMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private int dungeonSceneId_ ;
      /**
       * <code>uint32 dungeon_scene_id = 5;</code>
       * @return The dungeonSceneId.
       */
      @java.lang.Override
      public int getDungeonSceneId() {
        return dungeonSceneId_;
      }
      /**
       * <code>uint32 dungeon_scene_id = 5;</code>
       * @param value The dungeonSceneId to set.
       * @return This builder for chaining.
       */
      public Builder setDungeonSceneId(int value) {
        
        dungeonSceneId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 dungeon_scene_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDungeonSceneId() {
        
        dungeonSceneId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MistTrialSettleNotify)
    }

    // @@protoc_insertion_point(class_scope:MistTrialSettleNotify)
    private static final emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify();
    }

    public static emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MistTrialSettleNotify>
        PARSER = new com.google.protobuf.AbstractParser<MistTrialSettleNotify>() {
      @java.lang.Override
      public MistTrialSettleNotify parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MistTrialSettleNotify(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MistTrialSettleNotify> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MistTrialSettleNotify> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.grasscutter.net.proto.MistTrialSettleNotifyOuterClass.MistTrialSettleNotify getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MistTrialSettleNotify_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MistTrialSettleNotify_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MistTrialSettleNotify_ExhibitionListDataRecordMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MistTrialSettleNotify_ExhibitionListDataRecordMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MistTrialSettleNotify_ExhibitionListDataResultMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MistTrialSettleNotify_ExhibitionListDataResultMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033MistTrialSettleNotify.proto\"\375\002\n\025MistTr" +
      "ialSettleNotify\022`\n\037exhibition_list_data_" +
      "record_map\030\017 \003(\01327.MistTrialSettleNotify" +
      ".ExhibitionListDataRecordMapEntry\022`\n\037exh" +
      "ibition_list_data_result_map\030\016 \003(\01327.Mis" +
      "tTrialSettleNotify.ExhibitionListDataRes" +
      "ultMapEntry\022\030\n\020dungeon_scene_id\030\005 \001(\r\032B\n" +
      " ExhibitionListDataRecordMapEntry\022\013\n\003key" +
      "\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\032B\n ExhibitionL" +
      "istDataResultMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005va" +
      "lue\030\002 \001(\r:\0028\001B\033\n\031emu.grasscutter.net.pro" +
      "tob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_MistTrialSettleNotify_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_MistTrialSettleNotify_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MistTrialSettleNotify_descriptor,
        new java.lang.String[] { "ExhibitionListDataRecordMap", "ExhibitionListDataResultMap", "DungeonSceneId", });
    internal_static_MistTrialSettleNotify_ExhibitionListDataRecordMapEntry_descriptor =
      internal_static_MistTrialSettleNotify_descriptor.getNestedTypes().get(0);
    internal_static_MistTrialSettleNotify_ExhibitionListDataRecordMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MistTrialSettleNotify_ExhibitionListDataRecordMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_MistTrialSettleNotify_ExhibitionListDataResultMapEntry_descriptor =
      internal_static_MistTrialSettleNotify_descriptor.getNestedTypes().get(1);
    internal_static_MistTrialSettleNotify_ExhibitionListDataResultMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MistTrialSettleNotify_ExhibitionListDataResultMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
